// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RecordScreen test suite Edit mode tests renders 1`] = `
<View
  collapsable={false}
  style={
    Object {
      "height": "100%",
      "left": 0,
      "position": "absolute",
      "top": 0,
      "transform": Array [
        Object {
          "translateY": 0,
        },
      ],
      "width": "100%",
    }
  }
>
  <RCTScrollView
    style={
      Object {
        "flex": 1,
        "marginTop": 1,
        "paddingHorizontal": 10,
      }
    }
  >
    <View>
      <Text
        style={
          Object {
            "fontSize": 15,
            "marginTop": 3,
          }
        }
      >
        Are you Taking a Sample or Reporting a Sighting?
      </Text>
      <View
        style={
          Array [
            Object {
              "alignSelf": "stretch",
            },
            undefined,
          ]
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="record-type-picker"
        >
          <View
            pointerEvents="box-only"
          >
            <TextInput
              editable={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "#efefef",
                    "borderColor": "gray",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "minHeight": "8%",
                    "paddingHorizontal": 15,
                    "paddingVertical": 15,
                  },
                  Object {},
                ]
              }
              testID="text_input"
              value="I'm Taking a Sample"
            />
          </View>
        </View>
        <Modal
          hardwareAccelerated={false}
          onOrientationChange={[Function]}
          supportedOrientations={
            Array [
              "portrait",
              "landscape",
            ]
          }
          testID="ios_modal"
          transparent={true}
          visible={false}
        />
      </View>
      <Text
        style={
          Object {
            "fontSize": 15,
            "marginTop": 3,
          }
        }
      >
        Date
      </Text>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        testID="calendar-pressable"
      >
        <View
          pointerEvents="none"
        >
          <TextInput
            style={
              Object {
                "backgroundColor": "#efefef",
                "borderColor": "gray",
                "borderRadius": 4,
                "borderWidth": 1,
                "minHeight": "8%",
                "paddingHorizontal": 15,
                "paddingVertical": 15,
              }
            }
            value="2021-09-16"
          />
        </View>
      </View>
      <Text
        style={
          Object {
            "fontSize": 15,
            "marginTop": 3,
          }
        }
      >
        Tube Id
      </Text>
      <TextInput
        blurOnSubmit={true}
        defaultValue="LAB-1337"
        maxLength={20}
        multiline={true}
        onChangeText={[Function]}
        onContentSizeChange={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Leave blank if tube does not have an id"
        returnKeyType="done"
        style={
          Array [
            Object {
              "backgroundColor": "#efefef",
              "borderColor": "gray",
              "borderRadius": 4,
              "borderWidth": 1,
              "minHeight": "8%",
              "paddingHorizontal": 15,
              "paddingVertical": 15,
            },
            Object {
              "paddingTop": 15,
            },
          ]
        }
        value="LAB-1337"
      />
      <Text
        style={
          Object {
            "fontSize": 15,
            "marginTop": 3,
          }
        }
      >
        GPS Coordinates (latitude, longitude)
      </Text>
      <TextInput
        defaultValue="-123.456, 96.96"
        editable={true}
        maxLength={30}
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Looking for GPS signal"
        returnKeyType="done"
        style={
          Object {
            "backgroundColor": "#efefef",
            "borderColor": "gray",
            "borderRadius": 4,
            "borderWidth": 1,
            "minHeight": "8%",
            "paddingHorizontal": 15,
            "paddingVertical": 15,
          }
        }
        testID="gps-manual-input"
      />
      <Text
        style={
          Object {
            "fontSize": 15,
            "marginTop": 3,
          }
        }
      >
        Size
      </Text>
      <View
        style={
          Array [
            Object {
              "alignSelf": "stretch",
            },
            undefined,
          ]
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="algae-size-picker"
        >
          <View
            pointerEvents="box-only"
          >
            <TextInput
              editable={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "#efefef",
                    "borderColor": "gray",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "minHeight": "8%",
                    "paddingHorizontal": 15,
                    "paddingVertical": 15,
                  },
                  Object {},
                ]
              }
              testID="text_input"
              value="Fist"
            />
          </View>
        </View>
        <Modal
          hardwareAccelerated={false}
          onOrientationChange={[Function]}
          supportedOrientations={
            Array [
              "portrait",
              "landscape",
            ]
          }
          testID="ios_modal"
          transparent={true}
          visible={false}
        />
      </View>
      <Text
        style={
          Object {
            "fontSize": 15,
            "marginTop": 3,
          }
        }
      >
        Color
      </Text>
      <View
        style={
          Array [
            Object {
              "alignSelf": "stretch",
            },
            undefined,
          ]
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="algae-color-picker"
        >
          <View
            pointerEvents="box-only"
          >
            <TextInput
              editable={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "#efefef",
                    "borderColor": "gray",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "minHeight": "8%",
                    "paddingHorizontal": 15,
                    "paddingVertical": 15,
                  },
                  Object {},
                ]
              }
              testID="text_input"
              value="Red"
            />
          </View>
        </View>
        <Modal
          hardwareAccelerated={false}
          onOrientationChange={[Function]}
          supportedOrientations={
            Array [
              "portrait",
              "landscape",
            ]
          }
          testID="ios_modal"
          transparent={true}
          visible={false}
        />
      </View>
      <Text
        style={
          Object {
            "fontSize": 15,
            "marginTop": 3,
          }
        }
      >
        Location Description (limit 255 characters)
      </Text>
      <TextInput
        blurOnSubmit={true}
        defaultValue="test location"
        maxLength={255}
        multiline={true}
        onChangeText={[Function]}
        onContentSizeChange={[Function]}
        onSubmitEditing={[Function]}
        placeholder="ie: Blue Lake, North Cascades, WA"
        returnKeyType="done"
        style={
          Array [
            Object {
              "backgroundColor": "#efefef",
              "borderColor": "gray",
              "borderRadius": 4,
              "borderWidth": 1,
              "minHeight": "8%",
              "paddingHorizontal": 15,
              "paddingVertical": 15,
            },
            Object {
              "paddingTop": 15,
            },
          ]
        }
        value="test location"
      />
      <Text
        style={
          Object {
            "fontSize": 15,
            "marginTop": 3,
          }
        }
      >
        Notes (limit 255 characters)
      </Text>
      <TextInput
        blurOnSubmit={true}
        defaultValue="test notes"
        maxLength={255}
        multiline={true}
        onChangeText={[Function]}
        onContentSizeChange={[Function]}
        onSubmitEditing={[Function]}
        placeholder="ie. dark red algae on glacial ice"
        returnKeyType="done"
        style={
          Array [
            Object {
              "backgroundColor": "#efefef",
              "borderColor": "gray",
              "borderRadius": 4,
              "borderWidth": 1,
              "minHeight": "8%",
              "paddingHorizontal": 15,
              "paddingVertical": 15,
            },
            Object {
              "paddingTop": 15,
            },
          ]
        }
        value="test notes"
      />
      <Text
        style={
          Object {
            "fontSize": 15,
            "marginTop": 3,
          }
        }
      >
        Select Photos (limit 4)
      </Text>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        testID="photo-selector"
      >
        <View
          style={
            Object {
              "flex": 1,
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
                "height": 100,
                "margin": 1,
              }
            }
          >
            <Image
              source={
                Object {
                  "uri": "46",
                }
              }
              style={
                Object {
                  "borderColor": "black",
                  "borderRadius": 2,
                  "borderWidth": 1,
                  "height": "100%",
                  "width": "100%",
                }
              }
            />
          </View>
          <View
            style={
              Object {
                "flex": 1,
                "height": 100,
                "margin": 1,
              }
            }
          >
            <Image
              source={
                Object {
                  "uri": "23",
                }
              }
              style={
                Object {
                  "borderColor": "black",
                  "borderRadius": 2,
                  "borderWidth": 1,
                  "height": "100%",
                  "width": "100%",
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`RecordScreen test suite renders 1`] = `
<View
  collapsable={false}
  style={
    Object {
      "height": "100%",
      "left": 0,
      "position": "absolute",
      "top": 0,
      "transform": Array [
        Object {
          "translateY": 0,
        },
      ],
      "width": "100%",
    }
  }
>
  <RCTScrollView
    style={
      Object {
        "flex": 1,
        "marginTop": 1,
        "paddingHorizontal": 10,
      }
    }
  >
    <View>
      <Text
        style={
          Object {
            "fontSize": 15,
            "marginTop": 3,
          }
        }
      >
        Are you Taking a Sample or Reporting a Sighting?
      </Text>
      <View
        style={
          Array [
            Object {
              "alignSelf": "stretch",
            },
            undefined,
          ]
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="record-type-picker"
        >
          <View
            pointerEvents="box-only"
          >
            <TextInput
              editable={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "#efefef",
                    "borderColor": "gray",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "minHeight": "8%",
                    "paddingHorizontal": 15,
                    "paddingVertical": 15,
                  },
                  Object {},
                ]
              }
              testID="text_input"
              value="I'm Taking a Sample"
            />
          </View>
        </View>
        <Modal
          hardwareAccelerated={false}
          onOrientationChange={[Function]}
          supportedOrientations={
            Array [
              "portrait",
              "landscape",
            ]
          }
          testID="ios_modal"
          transparent={true}
          visible={false}
        />
      </View>
      <Text
        style={
          Object {
            "fontSize": 15,
            "marginTop": 3,
          }
        }
      >
        Date
      </Text>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        testID="calendar-pressable"
      >
        <View
          pointerEvents="none"
        >
          <TextInput
            style={
              Object {
                "backgroundColor": "#efefef",
                "borderColor": "gray",
                "borderRadius": 4,
                "borderWidth": 1,
                "minHeight": "8%",
                "paddingHorizontal": 15,
                "paddingVertical": 15,
              }
            }
            value="2022-01-01"
          />
        </View>
      </View>
      <Text
        style={
          Object {
            "fontSize": 15,
            "marginTop": 3,
          }
        }
      >
        Tube Id
      </Text>
      <TextInput
        blurOnSubmit={true}
        maxLength={20}
        multiline={true}
        onChangeText={[Function]}
        onContentSizeChange={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Leave blank if tube does not have an id"
        returnKeyType="done"
        style={
          Array [
            Object {
              "backgroundColor": "#efefef",
              "borderColor": "gray",
              "borderRadius": 4,
              "borderWidth": 1,
              "minHeight": "8%",
              "paddingHorizontal": 15,
              "paddingVertical": 15,
            },
            Object {
              "paddingTop": 15,
            },
          ]
        }
        value=""
      />
      <Text
        style={
          Object {
            "fontSize": 15,
            "marginTop": 3,
          }
        }
      >
        GPS Coordinates (latitude, longitude)
      </Text>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        testID="gps-manual-pressable"
      >
        <View
          pointerEvents="none"
        >
          <TextInput
            defaultValue=""
            editable={false}
            maxLength={30}
            placeholder="Looking for GPS signal"
            returnKeyType="done"
            style={
              Object {
                "backgroundColor": "#efefef",
                "borderColor": "gray",
                "borderRadius": 4,
                "borderWidth": 1,
                "minHeight": "8%",
                "paddingHorizontal": 15,
                "paddingVertical": 15,
              }
            }
          />
        </View>
      </View>
      <Text
        style={
          Object {
            "fontSize": 15,
            "marginTop": 3,
          }
        }
      >
        Size
      </Text>
      <View
        style={
          Array [
            Object {
              "alignSelf": "stretch",
            },
            undefined,
          ]
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="algae-size-picker"
        >
          <View
            pointerEvents="box-only"
          >
            <TextInput
              editable={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "#efefef",
                    "borderColor": "gray",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "minHeight": "8%",
                    "paddingHorizontal": 15,
                    "paddingVertical": 15,
                  },
                  Object {},
                ]
              }
              testID="text_input"
              value="Select a size"
            />
          </View>
        </View>
        <Modal
          hardwareAccelerated={false}
          onOrientationChange={[Function]}
          supportedOrientations={
            Array [
              "portrait",
              "landscape",
            ]
          }
          testID="ios_modal"
          transparent={true}
          visible={false}
        />
      </View>
      <Text
        style={
          Object {
            "fontSize": 15,
            "marginTop": 3,
          }
        }
      >
        Color
      </Text>
      <View
        style={
          Array [
            Object {
              "alignSelf": "stretch",
            },
            undefined,
          ]
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="algae-color-picker"
        >
          <View
            pointerEvents="box-only"
          >
            <TextInput
              editable={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "#efefef",
                    "borderColor": "gray",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "minHeight": "8%",
                    "paddingHorizontal": 15,
                    "paddingVertical": 15,
                  },
                  Object {},
                ]
              }
              testID="text_input"
              value="Select a color"
            />
          </View>
        </View>
        <Modal
          hardwareAccelerated={false}
          onOrientationChange={[Function]}
          supportedOrientations={
            Array [
              "portrait",
              "landscape",
            ]
          }
          testID="ios_modal"
          transparent={true}
          visible={false}
        />
      </View>
      <Text
        style={
          Object {
            "fontSize": 15,
            "marginTop": 3,
          }
        }
      >
        Location Description (limit 255 characters)
      </Text>
      <TextInput
        blurOnSubmit={true}
        maxLength={255}
        multiline={true}
        onChangeText={[Function]}
        onContentSizeChange={[Function]}
        onSubmitEditing={[Function]}
        placeholder="ie: Blue Lake, North Cascades, WA"
        returnKeyType="done"
        style={
          Array [
            Object {
              "backgroundColor": "#efefef",
              "borderColor": "gray",
              "borderRadius": 4,
              "borderWidth": 1,
              "minHeight": "8%",
              "paddingHorizontal": 15,
              "paddingVertical": 15,
            },
            Object {
              "paddingTop": 15,
            },
          ]
        }
        value=""
      />
      <Text
        style={
          Object {
            "fontSize": 15,
            "marginTop": 3,
          }
        }
      >
        Notes (limit 255 characters)
      </Text>
      <TextInput
        blurOnSubmit={true}
        maxLength={255}
        multiline={true}
        onChangeText={[Function]}
        onContentSizeChange={[Function]}
        onSubmitEditing={[Function]}
        placeholder="ie. dark red algae on glacial ice"
        returnKeyType="done"
        style={
          Array [
            Object {
              "backgroundColor": "#efefef",
              "borderColor": "gray",
              "borderRadius": 4,
              "borderWidth": 1,
              "minHeight": "8%",
              "paddingHorizontal": 15,
              "paddingVertical": 15,
            },
            Object {
              "paddingTop": 15,
            },
          ]
        }
        value=""
      />
      <Text
        style={
          Object {
            "fontSize": 15,
            "marginTop": 3,
          }
        }
      >
        Select Photos (limit 4)
      </Text>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        testID="photo-selector"
      >
        <Text />
      </View>
    </View>
  </RCTScrollView>
</View>
`;
