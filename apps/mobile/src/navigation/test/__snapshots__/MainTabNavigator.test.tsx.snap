// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Navigation test suite renders first run screen 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <RNSScreenStack
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <RNSScreen
        collapsable={false}
        forwardedRef={[Function]}
        gestureResponseDistance={
          Object {
            "bottom": -1,
            "end": -1,
            "start": -1,
            "top": -1,
          }
        }
        nativeBackButtonDismissalEnabled={false}
        onAppear={[Function]}
        onDisappear={[Function]}
        onDismissed={[Function]}
        onHeaderBackButtonClicked={[Function]}
        onNativeDismissCancelled={[Function]}
        onTransitionProgress={[Function]}
        onWillDisappear={[Function]}
        replaceAnimation="push"
        stackPresentation="push"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
        swipeDirection="horizontal"
      >
        <RNSScreenStackHeaderConfig
          backButtonInCustomView={false}
          backgroundColor="rgb(255, 255, 255)"
          color="rgb(0, 122, 255)"
          direction="ltr"
          disableBackButtonMenu={false}
          hidden={false}
          hideBackButton={false}
          largeTitleHideShadow={false}
          title="Welcome"
          titleColor="rgb(28, 28, 30)"
          topInsetEnabled={false}
          translucent={false}
        />
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          style={
            Object {
              "flex": 1,
              "flexDirection": "column-reverse",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "flex": 1,
                },
                Object {
                  "backgroundColor": "rgb(242, 242, 242)",
                },
                undefined,
              ]
            }
          >
            <View
              collapsable={false}
              style={
                Object {
                  "height": "100%",
                  "left": 0,
                  "position": "absolute",
                  "top": 0,
                  "transform": Array [
                    Object {
                      "translateY": 0,
                    },
                  ],
                  "width": "100%",
                }
              }
            >
              <RCTScrollView
                style={
                  Object {
                    "flex": 1,
                    "marginTop": 30,
                    "paddingHorizontal": 10,
                  }
                }
              >
                <View>
                  <View
                    style={
                      Object {
                        "flexDirection": "row",
                        "justifyContent": "center",
                      }
                    }
                  >
                    <Text />
                    <Text
                      style={
                        Object {
                          "fontSize": 25,
                          "fontWeight": "bold",
                          "marginTop": 1,
                          "textAlign": "center",
                        }
                      }
                    >
                      Living Snow Project
                    </Text>
                    <Text />
                  </View>
                  <Text
                    style={
                      Object {
                        "color": "red",
                        "fontSize": 12,
                        "marginBottom": 20,
                        "marginLeft": 20,
                        "marginRight": 20,
                        "marginTop": 20,
                        "textAlign": "center",
                      }
                    }
                  >
                    Enter your name and the organization you are associated with, or skip and remain anonymous. You can change these at any time in the Settings tab.
                  </Text>
                  <View
                    dataSet={Object {}}
                    isInvalid={false}
                    isRequired={false}
                    style={
                      Object {
                        "width": "100%",
                      }
                    }
                  >
                    <View
                      dataSet={Object {}}
                      feedbackId="field-3-feedback"
                      hasFeedbackText={true}
                      hasHelpText={false}
                      helpTextId="field-3-helptext"
                      isDisabled={false}
                      isInvalid={false}
                      isReadOnly={false}
                      isRequired={false}
                      labelId="field-3-label"
                      nativeID="field-3-label"
                      setHasFeedbackText={[Function]}
                      setHasHelpText={[Function]}
                      style={
                        Object {
                          "flexDirection": "row",
                          "justifyContent": "flex-start",
                          "marginBottom": 4,
                          "marginTop": 4,
                        }
                      }
                    >
                      <Text
                        dataSet={Object {}}
                        style={
                          Object {
                            "backgroundColor": undefined,
                            "color": "#737373",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontStyle": "normal",
                            "fontWeight": "500",
                            "letterSpacing": 0,
                            "lineHeight": 21,
                            "textDecorationLine": undefined,
                          }
                        }
                      >
                        Name
                      </Text>
                    </View>
                    <View
                      dataSet={Object {}}
                      isFocused={false}
                      style={
                        Object {
                          "alignItems": "center",
                          "borderColor": "#d4d4d4",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "flexDirection": "row",
                          "overflow": "hidden",
                        }
                      }
                    >
                      <TextInput
                        accessibilityDescribedBy="field-3-feedback"
                        accessible={true}
                        blurOnSubmit={false}
                        dataSet={Object {}}
                        disabled={false}
                        editable={true}
                        isRequired={false}
                        maxLength={50}
                        nativeID="field-3-input"
                        onBlur={[Function]}
                        onChangeText={[Function]}
                        onFocus={[Function]}
                        onKeyPress={[Function]}
                        onSubmitEditing={[Function]}
                        placeholder="Enter your name"
                        placeholderTextColor="#a3a3a3"
                        readOnly={false}
                        required={false}
                        returnKeyType="done"
                        secureTextEntry={false}
                        style={
                          Object {
                            "backgroundColor": "transparent",
                            "color": "#171717",
                            "flex": 1,
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontStyle": "normal",
                            "fontWeight": "400",
                            "height": "100%",
                            "paddingBottom": 8,
                            "paddingLeft": 12,
                            "paddingRight": 12,
                            "paddingTop": 8,
                            "width": "100%",
                          }
                        }
                      />
                    </View>
                  </View>
                  <View
                    dataSet={Object {}}
                    isInvalid={false}
                    isRequired={false}
                    style={
                      Object {
                        "width": "100%",
                      }
                    }
                  >
                    <View
                      dataSet={Object {}}
                      feedbackId="field-4-feedback"
                      hasFeedbackText={true}
                      hasHelpText={false}
                      helpTextId="field-4-helptext"
                      isDisabled={false}
                      isInvalid={false}
                      isReadOnly={false}
                      isRequired={false}
                      labelId="field-4-label"
                      nativeID="field-4-label"
                      setHasFeedbackText={[Function]}
                      setHasHelpText={[Function]}
                      style={
                        Object {
                          "flexDirection": "row",
                          "justifyContent": "flex-start",
                          "marginBottom": 4,
                          "marginTop": 4,
                        }
                      }
                    >
                      <Text
                        dataSet={Object {}}
                        style={
                          Object {
                            "backgroundColor": undefined,
                            "color": "#737373",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontStyle": "normal",
                            "fontWeight": "500",
                            "letterSpacing": 0,
                            "lineHeight": 21,
                            "textDecorationLine": undefined,
                          }
                        }
                      >
                        Organization
                      </Text>
                    </View>
                    <View
                      dataSet={Object {}}
                      isFocused={false}
                      style={
                        Object {
                          "alignItems": "center",
                          "borderColor": "#d4d4d4",
                          "borderRadius": 4,
                          "borderWidth": 1,
                          "flexDirection": "row",
                          "overflow": "hidden",
                        }
                      }
                    >
                      <TextInput
                        accessibilityDescribedBy="field-4-feedback"
                        accessible={true}
                        blurOnSubmit={true}
                        dataSet={Object {}}
                        disabled={false}
                        editable={true}
                        isRequired={false}
                        maxLength={50}
                        nativeID="field-4-input"
                        onBlur={[Function]}
                        onChangeText={[Function]}
                        onFocus={[Function]}
                        onKeyPress={[Function]}
                        onSubmitEditing={[Function]}
                        placeholder="Enter organization you belong to (if any)"
                        placeholderTextColor="#a3a3a3"
                        readOnly={false}
                        required={false}
                        returnKeyType="done"
                        secureTextEntry={false}
                        style={
                          Object {
                            "backgroundColor": "transparent",
                            "color": "#171717",
                            "flex": 1,
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontStyle": "normal",
                            "fontWeight": "400",
                            "height": "100%",
                            "paddingBottom": 8,
                            "paddingLeft": 12,
                            "paddingRight": 12,
                            "paddingTop": 8,
                            "width": "100%",
                          }
                        }
                      />
                    </View>
                  </View>
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flex": 2,
                        "justifyContent": "flex-start",
                        "marginTop": 30,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Array [
                          Object {},
                          Object {
                            "opacity": 1,
                          },
                        ]
                      }
                      testID=""
                    >
                      <View
                        style={
                          Object {
                            "backgroundColor": "lightpink",
                            "borderRadius": 5,
                            "height": 40,
                            "justifyContent": "center",
                            "width": 200,
                          }
                        }
                      >
                        <Text
                          style={
                            Object {
                              "fontSize": 20,
                              "fontWeight": "bold",
                              "textAlign": "center",
                            }
                          }
                        >
                          Let's get started!
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
              </RCTScrollView>
            </View>
          </View>
        </View>
      </RNSScreen>
    </RNSScreenStack>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Navigation test suite renders timeline screen 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenStack
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      collapsable={false}
      forwardedRef={[Function]}
      gestureResponseDistance={
        Object {
          "bottom": -1,
          "end": -1,
          "start": -1,
          "top": -1,
        }
      }
      nativeBackButtonDismissalEnabled={false}
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onHeaderBackButtonClicked={[Function]}
      onNativeDismissCancelled={[Function]}
      onTransitionProgress={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      stackPresentation="push"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      swipeDirection="horizontal"
    >
      <RNSScreenStackHeaderConfig
        backButtonInCustomView={false}
        backgroundColor="rgb(255, 255, 255)"
        color="rgb(0, 122, 255)"
        direction="ltr"
        disableBackButtonMenu={false}
        hidden={false}
        hideBackButton={false}
        largeTitleHideShadow={false}
        title="Timeline"
        titleColor="rgb(28, 28, 30)"
        topInsetEnabled={false}
        translucent={false}
      >
        <RNSScreenStackHeaderSubview
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          type="left"
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "left": 25,
                },
                Object {
                  "opacity": 1,
                },
              ]
            }
            testID="timeline-screen-settings-button"
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                Array [
                  Object {
                    "color": "#0077ff",
                    "fontSize": 32,
                  },
                  undefined,
                  Object {
                    "fontFamily": "ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
              testID="settings-outline"
            >
              
            </Text>
          </View>
        </RNSScreenStackHeaderSubview>
        <RNSScreenStackHeaderSubview
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          type="right"
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "right": 25,
                },
                Object {
                  "opacity": 1,
                },
              ]
            }
            testID="timeline-screen-record-button"
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                Array [
                  Object {
                    "color": "#0077ff",
                    "fontSize": 32,
                  },
                  undefined,
                  Object {
                    "fontFamily": "ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
              testID="add-circle-outline"
            >
              
            </Text>
          </View>
        </RNSScreenStackHeaderSubview>
      </RNSScreenStackHeaderConfig>
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        style={
          Object {
            "flex": 1,
            "flexDirection": "column-reverse",
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "flex": 1,
              },
              Object {
                "backgroundColor": "rgb(242, 242, 242)",
              },
              undefined,
            ]
          }
        >
          <View
            onLayout={[Function]}
            style={
              Object {
                "flex": 1,
              }
            }
            testID="timeline-screen-record-list-view"
          >
            <View
              collapsable={false}
              style={
                Object {
                  "backgroundColor": "rgba(211, 211, 211, 1)",
                  "borderBottomWidth": 1,
                }
              }
            >
              <Text
                style={
                  Object {
                    "fontSize": 16,
                    "textAlign": "center",
                  }
                }
              >
                Idle
              </Text>
            </View>
            <RCTScrollView
              ItemSeparatorComponent={[Function]}
              ListEmptyComponent={[Function]}
              data={Array []}
              getItem={[Function]}
              getItemCount={[Function]}
              keyExtractor={[Function]}
              onContentSizeChange={[Function]}
              onEndReached={[Function]}
              onEndReachedThreshold={0.5}
              onLayout={[Function]}
              onMomentumScrollBegin={[Function]}
              onMomentumScrollEnd={[Function]}
              onRefresh={[Function]}
              onScroll={[Function]}
              onScrollBeginDrag={[Function]}
              onScrollEndDrag={[Function]}
              refreshControl={
                <RefreshControlMock
                  onRefresh={[Function]}
                  refreshing={false}
                />
              }
              refreshing={false}
              removeClippedSubviews={false}
              renderItem={[Function]}
              scrollEventThrottle={50}
              stickyHeaderIndices={Array []}
              testID="timeline-screen-flatlist"
              viewabilityConfigCallbackPairs={Array []}
            >
              <RCTRefreshControl />
              <View>
                <View
                  style={
                    Object {
                      "backgroundColor": "lightgrey",
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "fontSize": 16,
                        "textAlign": "center",
                      }
                    }
                  >
                    Example Record
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "backgroundColor": "white",
                      "paddingLeft": 2,
                      "paddingRight": 2,
                    }
                  }
                >
                  <View
                    accessible={true}
                    collapsable={false}
                    focusable={true}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    testID="1234"
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                          "flexDirection": "row",
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flex": 0.7,
                            "marginLeft": 1,
                          }
                        }
                      >
                        <Text>
                          2022-04-01
Helpful Individual (Community Scientist)
Coordinates: 48.06727, -121.12165
                        </Text>
                      </View>
                      <View
                        style={
                          Object {
                            "flex": 0.15,
                            "marginLeft": 1,
                          }
                        }
                      >
                        <Text
                          allowFontScaling={false}
                          selectable={false}
                          style={
                            Array [
                              Object {
                                "color": "lightcoral",
                                "fontSize": 48,
                              },
                              undefined,
                              Object {
                                "fontFamily": "ionicons",
                                "fontStyle": "normal",
                                "fontWeight": "normal",
                              },
                              Object {},
                            ]
                          }
                          testID="sample-icon"
                        >
                          
                        </Text>
                      </View>
                      <View
                        style={
                          Object {
                            "flex": 0.15,
                            "marginLeft": 1,
                          }
                        }
                      >
                        <Text
                          allowFontScaling={false}
                          selectable={false}
                          style={
                            Array [
                              Object {
                                "color": "green",
                                "fontSize": 48,
                              },
                              undefined,
                              Object {
                                "fontFamily": "ionicons",
                                "fontStyle": "normal",
                                "fontWeight": "normal",
                              },
                              Object {},
                            ]
                          }
                          testID="picture-icon"
                        >
                          
                        </Text>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "alignSelf": "flex-end",
                              "backgroundColor": "red",
                              "borderRadius": 40,
                              "position": "absolute",
                              "right": 2,
                              "top": 1,
                              "width": "33%",
                            }
                          }
                        >
                          <Text
                            style={
                              Object {
                                "color": "white",
                              }
                            }
                          >
                            1
                          </Text>
                        </View>
                      </View>
                    </View>
                    <Text>
                      Location Description: White Chuck Glacier, Glacier Peak Wilderness, WA
Notes: Dark red algae in runnels
                    </Text>
                  </View>
                </View>
              </View>
            </RCTScrollView>
          </View>
        </View>
      </View>
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;
