// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Navigation test suite renders first run screen 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenStack
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      collapsable={false}
      forwardedRef={[Function]}
      gestureResponseDistance={
        Object {
          "bottom": -1,
          "end": -1,
          "start": -1,
          "top": -1,
        }
      }
      nativeBackButtonDismissalEnabled={false}
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onHeaderBackButtonClicked={[Function]}
      onNativeDismissCancelled={[Function]}
      onTransitionProgress={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      stackPresentation="push"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      swipeDirection="horizontal"
    >
      <RNSScreenStackHeaderConfig
        backButtonInCustomView={false}
        backgroundColor="rgb(255, 255, 255)"
        color="rgb(0, 122, 255)"
        direction="ltr"
        disableBackButtonMenu={false}
        hidden={false}
        hideBackButton={false}
        largeTitleHideShadow={false}
        title="Welcome"
        titleColor="rgb(28, 28, 30)"
        topInsetEnabled={false}
        translucent={false}
      />
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        style={
          Object {
            "flex": 1,
            "flexDirection": "column-reverse",
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "flex": 1,
              },
              Object {
                "backgroundColor": "rgb(242, 242, 242)",
              },
              undefined,
            ]
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "height": "100%",
                "left": 0,
                "position": "absolute",
                "top": 0,
                "transform": Array [
                  Object {
                    "translateY": 0,
                  },
                ],
                "width": "100%",
              }
            }
          >
            <RCTScrollView
              style={
                Object {
                  "flex": 1,
                  "marginTop": 30,
                  "paddingHorizontal": 10,
                }
              }
            >
              <View>
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                      "justifyContent": "center",
                    }
                  }
                >
                  <Text />
                  <Text
                    style={
                      Object {
                        "fontSize": 25,
                        "fontWeight": "bold",
                        "marginTop": 1,
                        "textAlign": "center",
                      }
                    }
                  >
                    Living Snow Project
                  </Text>
                  <Text />
                </View>
                <Text
                  style={
                    Object {
                      "color": "red",
                      "fontSize": 12,
                      "marginBottom": 20,
                      "marginLeft": 20,
                      "marginRight": 20,
                      "marginTop": 20,
                      "textAlign": "center",
                    }
                  }
                >
                  Enter your name and the organization you are associated with, or skip and remain anonymous. You can change these at any time in the Settings tab.
                </Text>
                <Text
                  style={
                    Object {
                      "fontSize": 15,
                      "paddingLeft": 10,
                      "paddingVertical": 2,
                    }
                  }
                >
                  Name
                </Text>
                <TextInput
                  maxLength={50}
                  onChangeText={[Function]}
                  onSubmitEditing={[Function]}
                  placeholder="Enter your name"
                  returnKeyType="done"
                  style={
                    Object {
                      "backgroundColor": "#efefef",
                      "borderColor": "gray",
                      "borderRadius": 4,
                      "borderWidth": 1,
                      "marginLeft": 10,
                      "marginRight": 10,
                      "paddingHorizontal": 15,
                      "paddingVertical": 15,
                    }
                  }
                />
                <Text
                  style={
                    Object {
                      "fontSize": 15,
                      "paddingLeft": 10,
                      "paddingVertical": 2,
                    }
                  }
                >
                  Organization
                </Text>
                <TextInput
                  maxLength={50}
                  onChangeText={[Function]}
                  placeholder="Enter organization you belong to (if any)"
                  returnKeyType="done"
                  style={
                    Object {
                      "backgroundColor": "#efefef",
                      "borderColor": "gray",
                      "borderRadius": 4,
                      "borderWidth": 1,
                      "marginLeft": 10,
                      "marginRight": 10,
                      "paddingHorizontal": 15,
                      "paddingVertical": 15,
                    }
                  }
                />
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flex": 2,
                      "justifyContent": "flex-start",
                      "marginTop": 30,
                    }
                  }
                >
                  <View
                    accessible={true}
                    collapsable={false}
                    focusable={true}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Array [
                        Object {},
                        Object {
                          "opacity": 1,
                        },
                      ]
                    }
                    testID=""
                  >
                    <View
                      style={
                        Object {
                          "backgroundColor": "lightpink",
                          "borderRadius": 5,
                          "height": 40,
                          "justifyContent": "center",
                          "width": 200,
                        }
                      }
                    >
                      <Text
                        style={
                          Object {
                            "fontSize": 20,
                            "fontWeight": "bold",
                            "textAlign": "center",
                          }
                        }
                      >
                        Let's get started!
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </RCTScrollView>
          </View>
        </View>
      </View>
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;

exports[`Navigation test suite renders timeline screen 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenStack
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      collapsable={false}
      forwardedRef={[Function]}
      gestureResponseDistance={
        Object {
          "bottom": -1,
          "end": -1,
          "start": -1,
          "top": -1,
        }
      }
      nativeBackButtonDismissalEnabled={false}
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onHeaderBackButtonClicked={[Function]}
      onNativeDismissCancelled={[Function]}
      onTransitionProgress={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      stackPresentation="push"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      swipeDirection="horizontal"
    >
      <RNSScreenStackHeaderConfig
        backButtonInCustomView={false}
        backgroundColor="rgb(255, 255, 255)"
        color="rgb(0, 122, 255)"
        direction="ltr"
        disableBackButtonMenu={false}
        hidden={false}
        hideBackButton={false}
        largeTitleHideShadow={false}
        title="Timeline"
        titleColor="rgb(28, 28, 30)"
        topInsetEnabled={false}
        translucent={false}
      >
        <RNSScreenStackHeaderSubview
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          type="left"
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "left": 25,
                },
                Object {
                  "opacity": 1,
                },
              ]
            }
            testID="timeline-screen-settings-button"
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                Array [
                  Object {
                    "color": "#0077ff",
                    "fontSize": 32,
                  },
                  undefined,
                  Object {
                    "fontFamily": "ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
              testID="settings-outline"
            >
              
            </Text>
          </View>
        </RNSScreenStackHeaderSubview>
        <RNSScreenStackHeaderSubview
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          type="right"
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "right": 25,
                },
                Object {
                  "opacity": 1,
                },
              ]
            }
            testID="timeline-screen-record-button"
          >
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                Array [
                  Object {
                    "color": "#0077ff",
                    "fontSize": 32,
                  },
                  undefined,
                  Object {
                    "fontFamily": "ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
              testID="add-circle-outline"
            >
              
            </Text>
          </View>
        </RNSScreenStackHeaderSubview>
      </RNSScreenStackHeaderConfig>
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        style={
          Object {
            "flex": 1,
            "flexDirection": "column-reverse",
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "flex": 1,
              },
              Object {
                "backgroundColor": "rgb(242, 242, 242)",
              },
              undefined,
            ]
          }
        >
          <View
            onLayout={[Function]}
            style={
              Object {
                "flex": 1,
              }
            }
            testID="timeline-screen-record-list-view"
          >
            <View
              collapsable={false}
              style={
                Object {
                  "backgroundColor": "rgba(211, 211, 211, 1)",
                  "borderBottomWidth": 1,
                }
              }
            >
              <Text
                style={
                  Object {
                    "fontSize": 16,
                    "textAlign": "center",
                  }
                }
              >
                Idle
              </Text>
            </View>
            <RCTScrollView
              ItemSeparatorComponent={[Function]}
              ListEmptyComponent={[Function]}
              data={Array []}
              getItem={[Function]}
              getItemCount={[Function]}
              keyExtractor={[Function]}
              onContentSizeChange={[Function]}
              onEndReached={[Function]}
              onEndReachedThreshold={0.5}
              onLayout={[Function]}
              onMomentumScrollBegin={[Function]}
              onMomentumScrollEnd={[Function]}
              onRefresh={[Function]}
              onScroll={[Function]}
              onScrollBeginDrag={[Function]}
              onScrollEndDrag={[Function]}
              refreshControl={
                <RefreshControlMock
                  onRefresh={[Function]}
                  refreshing={false}
                />
              }
              refreshing={false}
              removeClippedSubviews={false}
              renderItem={[Function]}
              scrollEventThrottle={50}
              stickyHeaderIndices={Array []}
              testID="timeline-screen-flatlist"
              viewabilityConfigCallbackPairs={Array []}
            >
              <RCTRefreshControl />
              <View>
                <View
                  style={
                    Object {
                      "backgroundColor": "lightgrey",
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "fontSize": 16,
                        "textAlign": "center",
                      }
                    }
                  >
                    Example Record
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "backgroundColor": "white",
                      "paddingLeft": 2,
                      "paddingRight": 2,
                    }
                  }
                >
                  <View
                    accessible={true}
                    collapsable={false}
                    focusable={true}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    testID="1234"
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                          "flexDirection": "row",
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "flex": 0.7,
                            "marginLeft": 1,
                          }
                        }
                      >
                        <Text>
                          2022-04-01
Helpful Individual (Community Scientist)
Coordinates: 48.06727, -121.12165
                        </Text>
                      </View>
                      <View
                        style={
                          Object {
                            "flex": 0.15,
                            "marginLeft": 1,
                          }
                        }
                      >
                        <Text
                          allowFontScaling={false}
                          selectable={false}
                          style={
                            Array [
                              Object {
                                "color": "lightcoral",
                                "fontSize": 48,
                              },
                              undefined,
                              Object {
                                "fontFamily": "ionicons",
                                "fontStyle": "normal",
                                "fontWeight": "normal",
                              },
                              Object {},
                            ]
                          }
                          testID="sample-icon"
                        >
                          
                        </Text>
                      </View>
                      <View
                        style={
                          Object {
                            "flex": 0.15,
                            "marginLeft": 1,
                          }
                        }
                      >
                        <Text
                          allowFontScaling={false}
                          selectable={false}
                          style={
                            Array [
                              Object {
                                "color": "green",
                                "fontSize": 48,
                              },
                              undefined,
                              Object {
                                "fontFamily": "ionicons",
                                "fontStyle": "normal",
                                "fontWeight": "normal",
                              },
                              Object {},
                            ]
                          }
                          testID="picture-icon"
                        >
                          
                        </Text>
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "alignSelf": "flex-end",
                              "backgroundColor": "red",
                              "borderRadius": 40,
                              "position": "absolute",
                              "right": 2,
                              "top": 1,
                              "width": "33%",
                            }
                          }
                        >
                          <Text
                            style={
                              Object {
                                "color": "white",
                              }
                            }
                          >
                            1
                          </Text>
                        </View>
                      </View>
                    </View>
                    <Text>
                      Location Description: White Chuck Glacier, Glacier Peak Wilderness, WA
Notes: Dark red algae in runnels
                    </Text>
                  </View>
                </View>
              </View>
            </RCTScrollView>
          </View>
        </View>
      </View>
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;
