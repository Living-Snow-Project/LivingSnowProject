// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HeaderButton test suite renders left on ios 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "marginLeft": 25,
        },
        {
          "opacity": 1,
        },
      ]
    }
    testID="test-button"
  >
    <Text />
  </View>
</RNCSafeAreaProvider>
`;

exports[`HeaderButton test suite renders right on android 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "marginRight": 25,
        },
        {
          "opacity": 1,
        },
      ]
    }
    testID="test-button"
  >
    <Text
      allowFontScaling={false}
      selectable={false}
      style={
        [
          {
            "color": "#0891b2",
            "fontSize": 32,
          },
          undefined,
          {
            "fontFamily": "ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          {},
        ]
      }
      testID="test-button-snow"
    >
      ï”¬
    </Text>
  </View>
</RNCSafeAreaProvider>
`;
