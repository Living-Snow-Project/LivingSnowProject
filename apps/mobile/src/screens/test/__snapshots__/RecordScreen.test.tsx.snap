// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RecordScreen test suite Edit mode tests renders 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    style={
      Object {
        "height": "100%",
        "left": 0,
        "position": "absolute",
        "top": 0,
        "transform": Array [
          Object {
            "translateY": 0,
          },
        ],
        "width": "100%",
      }
    }
  >
    <RCTScrollView
      automaticallyAdjustKeyboardInsets={true}
      contentContainerStyle={
        Array [
          Object {},
          Object {
            "dataSet": Object {},
          },
          Object {},
        ]
      }
      dataSet={Object {}}
      style={Object {}}
    >
      <View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "paddingLeft": 8,
              "paddingRight": 8,
            }
          }
        >
          <View
            dataSet={Object {}}
            isRequired={true}
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              feedbackId="field-608-feedback"
              hasFeedbackText={false}
              hasHelpText={false}
              helpTextId="field-608-helptext"
              isDisabled={false}
              isInvalid={false}
              isReadOnly={false}
              isRequired={true}
              labelId="field-608-label"
              nativeID="field-608-label"
              setHasFeedbackText={[Function]}
              setHasHelpText={[Function]}
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#737373",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Are you Reporting a Sighting or Taking a Sample?
              </Text>
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#dc2626",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                *
              </Text>
            </View>
            <View
              accessibilityLabel="select type of record"
              accessibilityRole="radiogroup"
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              dataSet={Object {}}
              defaultValue="Sample"
              name="algae record type selector"
              onChange={[Function]}
              style={
                Object {
                  "alignItems": "flex-start",
                }
              }
              testID="record-type-selector"
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "marginRight": 12,
                    }
                  }
                >
                  <View
                    accessibilityRole="radio"
                    accessibilityState={
                      Object {
                        "checked": false,
                        "disabled": false,
                      }
                    }
                    accessible={true}
                    checked={false}
                    collapsable={false}
                    dataSet={Object {}}
                    feedbackId="field-608-feedback"
                    focusable={true}
                    formControlContext={
                      Object {
                        "feedbackId": "field-608-feedback",
                        "hasFeedbackText": false,
                        "hasHelpText": false,
                        "helpTextId": "field-608-helptext",
                        "isDisabled": false,
                        "isInvalid": false,
                        "isReadOnly": false,
                        "isRequired": true,
                        "labelId": "field-608-label",
                        "nativeID": "field-608",
                        "setHasFeedbackText": [Function],
                        "setHasHelpText": [Function],
                      }
                    }
                    hasFeedbackText={false}
                    hasHelpText={false}
                    helpTextId="field-608-helptext"
                    isInvalid={false}
                    isReadOnly={false}
                    isRequired={true}
                    labelId="field-608-label"
                    nativeID="field-608"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    setHasFeedbackText={[Function]}
                    setHasHelpText={[Function]}
                    state={
                      Object {
                        "lastFocusedValue": null,
                        "name": "algae record type selector",
                        "selectedValue": "Sample",
                        "setLastFocusedValue": [Function],
                        "setSelectedValue": [Function],
                      }
                    }
                    style={Object {}}
                    value="Sighting"
                  >
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        }
                      }
                    >
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "alignItems": "center",
                            "display": "flex",
                            "justifyContent": "center",
                          }
                        }
                      >
                        <View
                          dataSet={Object {}}
                          style={Object {}}
                        />
                        <View
                          colorScheme="primary"
                          dataSet={Object {}}
                          defaultIsChecked={false}
                          feedbackId="field-608-feedback"
                          formControlContext={
                            Object {
                              "feedbackId": "field-608-feedback",
                              "hasFeedbackText": false,
                              "hasHelpText": false,
                              "helpTextId": "field-608-helptext",
                              "isDisabled": false,
                              "isInvalid": false,
                              "isReadOnly": false,
                              "isRequired": true,
                              "labelId": "field-608-label",
                              "nativeID": "field-608",
                              "setHasFeedbackText": [Function],
                              "setHasHelpText": [Function],
                            }
                          }
                          hasFeedbackText={false}
                          hasHelpText={false}
                          helpTextId="field-608-helptext"
                          isDisabled={false}
                          isInvalid={false}
                          isReadOnly={false}
                          isRequired={true}
                          labelId="field-608-label"
                          nativeID="field-608"
                          setHasFeedbackText={[Function]}
                          setHasHelpText={[Function]}
                          state={
                            Object {
                              "lastFocusedValue": null,
                              "name": "algae record type selector",
                              "selectedValue": "Sample",
                              "setLastFocusedValue": [Function],
                              "setSelectedValue": [Function],
                            }
                          }
                          style={
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "#fafafa",
                              "borderColor": "#a3a3a3",
                              "borderRadius": 9999,
                              "borderWidth": 2,
                              "display": "flex",
                              "justifyContent": "center",
                              "paddingBottom": 4,
                              "paddingLeft": 4,
                              "paddingRight": 4,
                              "paddingTop": 4,
                            }
                          }
                          value="Sighting"
                        >
                          <RNSVGSvgView
                            accessibilityRole="image"
                            align="xMidYMid"
                            bbHeight="12"
                            bbWidth="12"
                            dataSet={Object {}}
                            focusable={false}
                            meetOrSlice={0}
                            minX={0}
                            minY={0}
                            stroke=""
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderWidth": 0,
                                },
                                Object {
                                  "color": "#737373",
                                  "height": 12,
                                  "opacity": 0,
                                  "width": 12,
                                },
                                Object {
                                  "flex": 0,
                                  "height": 12,
                                  "width": 12,
                                },
                              ]
                            }
                            tintColor="#737373"
                            vbHeight={24}
                            vbWidth={24}
                          >
                            <RNSVGGroup
                              opacity={0}
                              propList={
                                Array [
                                  "stroke",
                                ]
                              }
                              stroke={null}
                            >
                              <RNSVGGroup>
                                <RNSVGPath
                                  d="M0 12C-2.34822e-08 13.5759 0.310389 15.1363 0.913445 16.5922C1.5165 18.0481 2.40042 19.371 3.51472 20.4853C4.62902 21.5996 5.95189 22.4835 7.4078 23.0866C8.86371 23.6896 10.4241 24 12 24C13.5759 24 15.1363 23.6896 16.5922 23.0866C18.0481 22.4835 19.371 21.5996 20.4853 20.4853C21.5996 19.371 22.4835 18.0481 23.0866 16.5922C23.6896 15.1363 24 13.5759 24 12C24 10.4241 23.6896 8.86371 23.0866 7.4078C22.4835 5.95189 21.5996 4.62902 20.4853 3.51472C19.371 2.40042 18.0481 1.5165 16.5922 0.913446C15.1363 0.310389 13.5759 0 12 0C10.4241 0 8.86371 0.310389 7.4078 0.913446C5.95189 1.5165 4.62902 2.40042 3.51472 3.51472C2.40042 4.62902 1.5165 5.95189 0.913445 7.4078C0.310389 8.86371 -2.34822e-08 10.4241 0 12Z"
                                  fill={
                                    Object {
                                      "type": 2,
                                    }
                                  }
                                  propList={
                                    Array [
                                      "fill",
                                      "stroke",
                                    ]
                                  }
                                  stroke={null}
                                />
                              </RNSVGGroup>
                            </RNSVGGroup>
                          </RNSVGSvgView>
                        </View>
                      </View>
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "width": 8,
                          }
                        }
                      />
                      <Text
                        dataSet={Object {}}
                        style={
                          Object {
                            "backgroundColor": undefined,
                            "color": "#171717",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontStyle": "normal",
                            "fontWeight": "400",
                            "letterSpacing": 0,
                            "lineHeight": 24,
                            "textDecorationLine": undefined,
                          }
                        }
                      >
                        Sighting
                      </Text>
                    </View>
                  </View>
                </View>
                <View
                  dataSet={Object {}}
                  style={Object {}}
                />
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "marginRight": 12,
                    }
                  }
                >
                  <View
                    accessibilityRole="radio"
                    accessibilityState={
                      Object {
                        "checked": true,
                        "disabled": false,
                      }
                    }
                    accessible={true}
                    checked={true}
                    collapsable={false}
                    dataSet={Object {}}
                    feedbackId="field-608-feedback"
                    focusable={true}
                    formControlContext={
                      Object {
                        "feedbackId": "field-608-feedback",
                        "hasFeedbackText": false,
                        "hasHelpText": false,
                        "helpTextId": "field-608-helptext",
                        "isDisabled": false,
                        "isInvalid": false,
                        "isReadOnly": false,
                        "isRequired": true,
                        "labelId": "field-608-label",
                        "nativeID": "field-608",
                        "setHasFeedbackText": [Function],
                        "setHasHelpText": [Function],
                      }
                    }
                    hasFeedbackText={false}
                    hasHelpText={false}
                    helpTextId="field-608-helptext"
                    isInvalid={false}
                    isReadOnly={false}
                    isRequired={true}
                    labelId="field-608-label"
                    nativeID="field-608"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    setHasFeedbackText={[Function]}
                    setHasHelpText={[Function]}
                    state={
                      Object {
                        "lastFocusedValue": null,
                        "name": "algae record type selector",
                        "selectedValue": "Sample",
                        "setLastFocusedValue": [Function],
                        "setSelectedValue": [Function],
                      }
                    }
                    style={Object {}}
                    value="Sample"
                  >
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        }
                      }
                    >
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "alignItems": "center",
                            "display": "flex",
                            "justifyContent": "center",
                          }
                        }
                      >
                        <View
                          dataSet={Object {}}
                          style={Object {}}
                        />
                        <View
                          colorScheme="primary"
                          dataSet={Object {}}
                          defaultIsChecked={false}
                          feedbackId="field-608-feedback"
                          formControlContext={
                            Object {
                              "feedbackId": "field-608-feedback",
                              "hasFeedbackText": false,
                              "hasHelpText": false,
                              "helpTextId": "field-608-helptext",
                              "isDisabled": false,
                              "isInvalid": false,
                              "isReadOnly": false,
                              "isRequired": true,
                              "labelId": "field-608-label",
                              "nativeID": "field-608",
                              "setHasFeedbackText": [Function],
                              "setHasHelpText": [Function],
                            }
                          }
                          hasFeedbackText={false}
                          hasHelpText={false}
                          helpTextId="field-608-helptext"
                          isDisabled={false}
                          isInvalid={false}
                          isReadOnly={false}
                          isRequired={true}
                          labelId="field-608-label"
                          nativeID="field-608"
                          setHasFeedbackText={[Function]}
                          setHasHelpText={[Function]}
                          state={
                            Object {
                              "lastFocusedValue": null,
                              "name": "algae record type selector",
                              "selectedValue": "Sample",
                              "setLastFocusedValue": [Function],
                              "setSelectedValue": [Function],
                            }
                          }
                          style={
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "#fafafa",
                              "borderColor": "#0891b2",
                              "borderRadius": 9999,
                              "borderWidth": 2,
                              "display": "flex",
                              "justifyContent": "center",
                              "paddingBottom": 4,
                              "paddingLeft": 4,
                              "paddingRight": 4,
                              "paddingTop": 4,
                            }
                          }
                          value="Sample"
                        >
                          <RNSVGSvgView
                            accessibilityRole="image"
                            align="xMidYMid"
                            bbHeight="12"
                            bbWidth="12"
                            dataSet={Object {}}
                            focusable={false}
                            meetOrSlice={0}
                            minX={0}
                            minY={0}
                            stroke=""
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderWidth": 0,
                                },
                                Object {
                                  "color": "#0891b2",
                                  "height": 12,
                                  "opacity": 1,
                                  "width": 12,
                                },
                                Object {
                                  "flex": 0,
                                  "height": 12,
                                  "width": 12,
                                },
                              ]
                            }
                            tintColor="#0891b2"
                            vbHeight={24}
                            vbWidth={24}
                          >
                            <RNSVGGroup
                              opacity={1}
                              propList={
                                Array [
                                  "stroke",
                                ]
                              }
                              stroke={null}
                            >
                              <RNSVGGroup>
                                <RNSVGPath
                                  d="M0 12C-2.34822e-08 13.5759 0.310389 15.1363 0.913445 16.5922C1.5165 18.0481 2.40042 19.371 3.51472 20.4853C4.62902 21.5996 5.95189 22.4835 7.4078 23.0866C8.86371 23.6896 10.4241 24 12 24C13.5759 24 15.1363 23.6896 16.5922 23.0866C18.0481 22.4835 19.371 21.5996 20.4853 20.4853C21.5996 19.371 22.4835 18.0481 23.0866 16.5922C23.6896 15.1363 24 13.5759 24 12C24 10.4241 23.6896 8.86371 23.0866 7.4078C22.4835 5.95189 21.5996 4.62902 20.4853 3.51472C19.371 2.40042 18.0481 1.5165 16.5922 0.913446C15.1363 0.310389 13.5759 0 12 0C10.4241 0 8.86371 0.310389 7.4078 0.913446C5.95189 1.5165 4.62902 2.40042 3.51472 3.51472C2.40042 4.62902 1.5165 5.95189 0.913445 7.4078C0.310389 8.86371 -2.34822e-08 10.4241 0 12Z"
                                  fill={
                                    Object {
                                      "type": 2,
                                    }
                                  }
                                  propList={
                                    Array [
                                      "fill",
                                      "stroke",
                                    ]
                                  }
                                  stroke={null}
                                />
                              </RNSVGGroup>
                            </RNSVGGroup>
                          </RNSVGSvgView>
                        </View>
                      </View>
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "width": 8,
                          }
                        }
                      />
                      <Text
                        dataSet={Object {}}
                        style={
                          Object {
                            "backgroundColor": undefined,
                            "color": "#171717",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontStyle": "normal",
                            "fontWeight": "400",
                            "letterSpacing": 0,
                            "lineHeight": 24,
                            "textDecorationLine": undefined,
                          }
                        }
                      >
                        Sample
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          />
          <View
            dataSet={Object {}}
            isRequired={true}
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              feedbackId="field-609-feedback"
              hasFeedbackText={false}
              hasHelpText={false}
              helpTextId="field-609-helptext"
              isDisabled={false}
              isInvalid={false}
              isReadOnly={false}
              isRequired={true}
              labelId="field-609-label"
              nativeID="field-609-label"
              setHasFeedbackText={[Function]}
              setHasHelpText={[Function]}
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#737373",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Date
              </Text>
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#dc2626",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                *
              </Text>
            </View>
            <View
              accessible={true}
              collapsable={false}
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={Object {}}
              testID="calendar-pressable"
            >
              <View
                pointerEvents="none"
              >
                <View
                  dataSet={Object {}}
                  isFocused={false}
                  style={
                    Object {
                      "alignItems": "center",
                      "borderColor": "#d4d4d4",
                      "borderRadius": 4,
                      "borderWidth": 1,
                      "flexDirection": "row",
                      "overflow": "hidden",
                    }
                  }
                >
                  <TextInput
                    accessibilityRequired={true}
                    accessible={true}
                    dataSet={Object {}}
                    disabled={false}
                    editable={true}
                    isRequired={true}
                    nativeID="field-609-input"
                    onBlur={[Function]}
                    onFocus={[Function]}
                    onKeyPress={[Function]}
                    placeholderTextColor="#a3a3a3"
                    readOnly={false}
                    required={true}
                    secureTextEntry={false}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "#171717",
                        "flex": 1,
                        "fontFamily": undefined,
                        "fontSize": 16,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "height": "100%",
                        "paddingBottom": 8,
                        "paddingLeft": 12,
                        "paddingRight": 12,
                        "paddingTop": 8,
                        "width": "100%",
                      }
                    }
                    value="2021-09-16"
                  />
                </View>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          />
          <View
            accessible={true}
            collapsable={false}
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={Object {}}
            testID="gps-manual-pressable"
          >
            <View
              dataSet={Object {}}
              pointerEvents="auto"
              style={Object {}}
            >
              <View
                dataSet={Object {}}
                isInvalid={false}
                isRequired={true}
                style={
                  Object {
                    "width": "100%",
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  feedbackId="field-617-feedback"
                  hasFeedbackText={true}
                  hasHelpText={false}
                  helpTextId="field-617-helptext"
                  isDisabled={false}
                  isInvalid={false}
                  isReadOnly={false}
                  isRequired={true}
                  labelId="field-617-label"
                  nativeID="field-617-label"
                  setHasFeedbackText={[Function]}
                  setHasHelpText={[Function]}
                  style={
                    Object {
                      "flexDirection": "row",
                      "justifyContent": "flex-start",
                      "marginBottom": 4,
                      "marginTop": 4,
                    }
                  }
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#737373",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    GPS Coordinates (latitude, longitude)
                  </Text>
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#dc2626",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    *
                  </Text>
                </View>
                <View
                  dataSet={Object {}}
                  isFocused={false}
                  style={
                    Object {
                      "alignItems": "center",
                      "borderColor": "#d4d4d4",
                      "borderRadius": 4,
                      "borderWidth": 1,
                      "flexDirection": "row",
                      "overflow": "hidden",
                    }
                  }
                >
                  <TextInput
                    accessibilityDescribedBy="field-617-feedback"
                    accessibilityRequired={true}
                    accessible={true}
                    blurOnSubmit={false}
                    dataSet={Object {}}
                    disabled={false}
                    editable={true}
                    isRequired={true}
                    maxLength={30}
                    nativeID="field-617-input"
                    onBlur={[Function]}
                    onChangeText={[Function]}
                    onFocus={[Function]}
                    onKeyPress={[Function]}
                    onSubmitEditing={[Function]}
                    placeholder="Looking for GPS signal"
                    placeholderTextColor="#a3a3a3"
                    readOnly={false}
                    required={true}
                    returnKeyType="done"
                    secureTextEntry={false}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "#171717",
                        "flex": 1,
                        "fontFamily": undefined,
                        "fontSize": 16,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "height": "100%",
                        "paddingBottom": 8,
                        "paddingLeft": 12,
                        "paddingRight": 12,
                        "paddingTop": 8,
                        "width": "100%",
                      }
                    }
                    value="-123.456, 96.96"
                  />
                </View>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          />
          <View
            dataSet={Object {}}
            isInvalid={false}
            isRequired={true}
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              feedbackId="field-618-feedback"
              hasFeedbackText={true}
              hasHelpText={false}
              helpTextId="field-618-helptext"
              isDisabled={false}
              isInvalid={false}
              isReadOnly={false}
              isRequired={true}
              labelId="field-618-label"
              nativeID="field-618-label"
              setHasFeedbackText={[Function]}
              setHasHelpText={[Function]}
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#737373",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Size
              </Text>
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#dc2626",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                *
              </Text>
            </View>
            <View
              accessibilityRole="button"
              accessible={true}
              collapsable={false}
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={Object {}}
            >
              <View
                dataSet={Object {}}
                isFocused={false}
                style={
                  Object {
                    "alignItems": "center",
                    "borderColor": "#d4d4d4",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "flexDirection": "row",
                    "overflow": "hidden",
                  }
                }
              >
                <TextInput
                  accessibilityDescribedBy="field-618-feedback"
                  accessibilityRequired={true}
                  accessible={true}
                  aria-hidden={true}
                  dataSet={Object {}}
                  disabled={false}
                  editable={false}
                  focusable={false}
                  importantForAccessibility="no"
                  isRequired={true}
                  nativeID="field-618-input"
                  onBlur={[Function]}
                  onFocus={[Function]}
                  onKeyPress={[Function]}
                  placeholder="Select a size"
                  placeholderTextColor="#a3a3a3"
                  pointerEvents="none"
                  readOnly={false}
                  required={true}
                  secureTextEntry={false}
                  selection={
                    Object {
                      "start": 0,
                    }
                  }
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#171717",
                      "flex": 1,
                      "fontFamily": undefined,
                      "fontSize": 18,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "height": "100%",
                      "paddingBottom": 8,
                      "paddingLeft": 12,
                      "paddingRight": 12,
                      "paddingTop": 8,
                      "width": "100%",
                    }
                  }
                  value="Fist"
                />
                <View
                  dataSet={Object {}}
                  style={Object {}}
                />
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight="24"
                  bbWidth="24"
                  dataSet={Object {}}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#737373",
                        "height": 24,
                        "marginRight": 12,
                        "paddingBottom": 4,
                        "paddingLeft": 4,
                        "paddingRight": 4,
                        "paddingTop": 4,
                        "width": 24,
                      },
                      Object {
                        "flex": 0,
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                  tintColor="#737373"
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M20.2286 6L11.9973 14.3785L3.76862 6.00268L2 7.80293L12 18L22 7.80293L20.2286 6Z"
                        fill={
                          Object {
                            "type": 2,
                          }
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          />
          <View
            dataSet={Object {}}
            isInvalid={false}
            isRequired={true}
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              feedbackId="field-619-feedback"
              hasFeedbackText={true}
              hasHelpText={false}
              helpTextId="field-619-helptext"
              isDisabled={false}
              isInvalid={false}
              isReadOnly={false}
              isRequired={true}
              labelId="field-619-label"
              nativeID="field-619-label"
              setHasFeedbackText={[Function]}
              setHasHelpText={[Function]}
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#737373",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Color (select all that apply)
              </Text>
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#dc2626",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                *
              </Text>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "display": "flex",
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginTop": -4,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "marginRight": 8,
                    "marginTop": 4,
                  }
                }
              >
                <View
                  accessibilityRole="checkbox"
                  accessibilityState={
                    Object {
                      "checked": true,
                      "disabled": false,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  dataSet={Object {}}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={Object {}}
                >
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "flex-start",
                      }
                    }
                  >
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "alignItems": "center",
                          "display": "flex",
                          "justifyContent": "center",
                        }
                      }
                    >
                      <View
                        dataSet={Object {}}
                        style={Object {}}
                      />
                      <View
                        checked={true}
                        colorScheme="red"
                        dataSet={Object {}}
                        defaultIsChecked={false}
                        disabled={false}
                        feedbackId="field-612-feedback"
                        hasFeedbackText={false}
                        hasHelpText={false}
                        helpTextId="field-612-helptext"
                        isChecked={true}
                        isDisabled={false}
                        isRequired={true}
                        labelId="field-612-label"
                        nativeID="field-612"
                        onChange={[Function]}
                        required={true}
                        setHasFeedbackText={[Function]}
                        setHasHelpText={[Function]}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#dc2626",
                            "borderColor": "#dc2626",
                            "borderRadius": 4,
                            "borderWidth": 2,
                            "display": "flex",
                            "justifyContent": "center",
                            "opacity": 1,
                            "paddingBottom": 2,
                            "paddingLeft": 2,
                            "paddingRight": 2,
                            "paddingTop": 2,
                          }
                        }
                        value="Red"
                      >
                        <RNSVGSvgView
                          accessibilityRole="image"
                          align="xMidYMid"
                          bbHeight="12"
                          bbWidth="12"
                          dataSet={Object {}}
                          focusable={false}
                          meetOrSlice={0}
                          minX={0}
                          minY={0}
                          stroke=""
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderWidth": 0,
                              },
                              Object {
                                "color": "#fafafa",
                                "height": 12,
                                "width": 12,
                              },
                              Object {
                                "flex": 0,
                                "height": 12,
                                "width": 12,
                              },
                            ]
                          }
                          tintColor="#fafafa"
                          vbHeight={24}
                          vbWidth={24}
                        >
                          <RNSVGGroup
                            propList={
                              Array [
                                "stroke",
                              ]
                            }
                            stroke={null}
                          >
                            <RNSVGGroup>
                              <RNSVGPath
                                d="M8.53115 15.1856L3.96198 10.744L2 12.6512L8.53115 19L22 5.9072L20.038 4L8.53115 15.1856Z"
                                fill={
                                  Object {
                                    "type": 2,
                                  }
                                }
                                propList={
                                  Array [
                                    "fill",
                                    "stroke",
                                  ]
                                }
                                stroke={null}
                              />
                            </RNSVGGroup>
                          </RNSVGGroup>
                        </RNSVGSvgView>
                      </View>
                    </View>
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "width": 8,
                        }
                      }
                    />
                    <Text
                      dataSet={Object {}}
                      style={
                        Object {
                          "backgroundColor": undefined,
                          "color": "#b91c1c",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontStyle": "normal",
                          "fontWeight": "500",
                          "letterSpacing": 0,
                          "lineHeight": 21,
                          "textDecorationLine": undefined,
                        }
                      }
                    >
                      Red
                    </Text>
                  </View>
                </View>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "marginRight": 8,
                    "marginTop": 4,
                  }
                }
              >
                <View
                  accessibilityRole="checkbox"
                  accessibilityState={
                    Object {
                      "checked": false,
                      "disabled": false,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  dataSet={Object {}}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={Object {}}
                >
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "flex-start",
                      }
                    }
                  >
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "alignItems": "center",
                          "display": "flex",
                          "justifyContent": "center",
                        }
                      }
                    >
                      <View
                        dataSet={Object {}}
                        style={Object {}}
                      />
                      <View
                        checked={false}
                        colorScheme="pink"
                        dataSet={Object {}}
                        defaultIsChecked={false}
                        disabled={false}
                        feedbackId="field-612-feedback"
                        hasFeedbackText={false}
                        hasHelpText={false}
                        helpTextId="field-612-helptext"
                        isChecked={false}
                        isDisabled={false}
                        isRequired={true}
                        labelId="field-612-label"
                        nativeID="field-612"
                        onChange={[Function]}
                        required={true}
                        setHasFeedbackText={[Function]}
                        setHasHelpText={[Function]}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#fafafa",
                            "borderColor": "#a3a3a3",
                            "borderRadius": 4,
                            "borderWidth": 2,
                            "display": "flex",
                            "justifyContent": "center",
                            "opacity": 1,
                            "paddingBottom": 2,
                            "paddingLeft": 2,
                            "paddingRight": 2,
                            "paddingTop": 2,
                          }
                        }
                        value="Pink"
                      >
                        <View
                          dataSet={Object {}}
                          style={
                            Object {
                              "color": "#fafafa",
                              "height": 12,
                              "width": 12,
                            }
                          }
                        />
                      </View>
                    </View>
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "width": 8,
                        }
                      }
                    />
                    <Text
                      dataSet={Object {}}
                      style={
                        Object {
                          "backgroundColor": undefined,
                          "color": "#ec4899",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontStyle": "normal",
                          "fontWeight": "500",
                          "letterSpacing": 0,
                          "lineHeight": 21,
                          "textDecorationLine": undefined,
                        }
                      }
                    >
                      Pink
                    </Text>
                  </View>
                </View>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "marginRight": 8,
                    "marginTop": 4,
                  }
                }
              >
                <View
                  accessibilityRole="checkbox"
                  accessibilityState={
                    Object {
                      "checked": true,
                      "disabled": false,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  dataSet={Object {}}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={Object {}}
                >
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "flex-start",
                      }
                    }
                  >
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "alignItems": "center",
                          "display": "flex",
                          "justifyContent": "center",
                        }
                      }
                    >
                      <View
                        dataSet={Object {}}
                        style={Object {}}
                      />
                      <View
                        checked={true}
                        colorScheme="green"
                        dataSet={Object {}}
                        defaultIsChecked={false}
                        disabled={false}
                        feedbackId="field-612-feedback"
                        hasFeedbackText={false}
                        hasHelpText={false}
                        helpTextId="field-612-helptext"
                        isChecked={true}
                        isDisabled={false}
                        isRequired={true}
                        labelId="field-612-label"
                        nativeID="field-612"
                        onChange={[Function]}
                        required={true}
                        setHasFeedbackText={[Function]}
                        setHasHelpText={[Function]}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#16a34a",
                            "borderColor": "#16a34a",
                            "borderRadius": 4,
                            "borderWidth": 2,
                            "display": "flex",
                            "justifyContent": "center",
                            "opacity": 1,
                            "paddingBottom": 2,
                            "paddingLeft": 2,
                            "paddingRight": 2,
                            "paddingTop": 2,
                          }
                        }
                        value="Green"
                      >
                        <RNSVGSvgView
                          accessibilityRole="image"
                          align="xMidYMid"
                          bbHeight="12"
                          bbWidth="12"
                          dataSet={Object {}}
                          focusable={false}
                          meetOrSlice={0}
                          minX={0}
                          minY={0}
                          stroke=""
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderWidth": 0,
                              },
                              Object {
                                "color": "#fafafa",
                                "height": 12,
                                "width": 12,
                              },
                              Object {
                                "flex": 0,
                                "height": 12,
                                "width": 12,
                              },
                            ]
                          }
                          tintColor="#fafafa"
                          vbHeight={24}
                          vbWidth={24}
                        >
                          <RNSVGGroup
                            propList={
                              Array [
                                "stroke",
                              ]
                            }
                            stroke={null}
                          >
                            <RNSVGGroup>
                              <RNSVGPath
                                d="M8.53115 15.1856L3.96198 10.744L2 12.6512L8.53115 19L22 5.9072L20.038 4L8.53115 15.1856Z"
                                fill={
                                  Object {
                                    "type": 2,
                                  }
                                }
                                propList={
                                  Array [
                                    "fill",
                                    "stroke",
                                  ]
                                }
                                stroke={null}
                              />
                            </RNSVGGroup>
                          </RNSVGGroup>
                        </RNSVGSvgView>
                      </View>
                    </View>
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "width": 8,
                        }
                      }
                    />
                    <Text
                      dataSet={Object {}}
                      style={
                        Object {
                          "backgroundColor": undefined,
                          "color": "#15803d",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontStyle": "normal",
                          "fontWeight": "500",
                          "letterSpacing": 0,
                          "lineHeight": 21,
                          "textDecorationLine": undefined,
                        }
                      }
                    >
                      Green
                    </Text>
                  </View>
                </View>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "marginRight": 8,
                    "marginTop": 4,
                  }
                }
              >
                <View
                  accessibilityRole="checkbox"
                  accessibilityState={
                    Object {
                      "checked": false,
                      "disabled": false,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  dataSet={Object {}}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={Object {}}
                >
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "flex-start",
                      }
                    }
                  >
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "alignItems": "center",
                          "display": "flex",
                          "justifyContent": "center",
                        }
                      }
                    >
                      <View
                        dataSet={Object {}}
                        style={Object {}}
                      />
                      <View
                        checked={false}
                        colorScheme="orange"
                        dataSet={Object {}}
                        defaultIsChecked={false}
                        disabled={false}
                        feedbackId="field-612-feedback"
                        hasFeedbackText={false}
                        hasHelpText={false}
                        helpTextId="field-612-helptext"
                        isChecked={false}
                        isDisabled={false}
                        isRequired={true}
                        labelId="field-612-label"
                        nativeID="field-612"
                        onChange={[Function]}
                        required={true}
                        setHasFeedbackText={[Function]}
                        setHasHelpText={[Function]}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#fafafa",
                            "borderColor": "#a3a3a3",
                            "borderRadius": 4,
                            "borderWidth": 2,
                            "display": "flex",
                            "justifyContent": "center",
                            "opacity": 1,
                            "paddingBottom": 2,
                            "paddingLeft": 2,
                            "paddingRight": 2,
                            "paddingTop": 2,
                          }
                        }
                        value="Orange"
                      >
                        <View
                          dataSet={Object {}}
                          style={
                            Object {
                              "color": "#fafafa",
                              "height": 12,
                              "width": 12,
                            }
                          }
                        />
                      </View>
                    </View>
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "width": 8,
                        }
                      }
                    />
                    <Text
                      dataSet={Object {}}
                      style={
                        Object {
                          "backgroundColor": undefined,
                          "color": "#f97316",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontStyle": "normal",
                          "fontWeight": "500",
                          "letterSpacing": 0,
                          "lineHeight": 21,
                          "textDecorationLine": undefined,
                        }
                      }
                    >
                      Orange
                    </Text>
                  </View>
                </View>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "marginRight": 8,
                    "marginTop": 4,
                  }
                }
              >
                <View
                  accessibilityRole="checkbox"
                  accessibilityState={
                    Object {
                      "checked": false,
                      "disabled": false,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  dataSet={Object {}}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={Object {}}
                >
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "flex-start",
                      }
                    }
                  >
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "alignItems": "center",
                          "display": "flex",
                          "justifyContent": "center",
                        }
                      }
                    >
                      <View
                        dataSet={Object {}}
                        style={Object {}}
                      />
                      <View
                        checked={false}
                        colorScheme="yellow"
                        dataSet={Object {}}
                        defaultIsChecked={false}
                        disabled={false}
                        feedbackId="field-612-feedback"
                        hasFeedbackText={false}
                        hasHelpText={false}
                        helpTextId="field-612-helptext"
                        isChecked={false}
                        isDisabled={false}
                        isRequired={true}
                        labelId="field-612-label"
                        nativeID="field-612"
                        onChange={[Function]}
                        required={true}
                        setHasFeedbackText={[Function]}
                        setHasHelpText={[Function]}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#fafafa",
                            "borderColor": "#a3a3a3",
                            "borderRadius": 4,
                            "borderWidth": 2,
                            "display": "flex",
                            "justifyContent": "center",
                            "opacity": 1,
                            "paddingBottom": 2,
                            "paddingLeft": 2,
                            "paddingRight": 2,
                            "paddingTop": 2,
                          }
                        }
                        value="Yellow"
                      >
                        <View
                          dataSet={Object {}}
                          style={
                            Object {
                              "color": "#fafafa",
                              "height": 12,
                              "width": 12,
                            }
                          }
                        />
                      </View>
                    </View>
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "width": 8,
                        }
                      }
                    />
                    <Text
                      dataSet={Object {}}
                      style={
                        Object {
                          "backgroundColor": undefined,
                          "color": "#ca8a04",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontStyle": "normal",
                          "fontWeight": "500",
                          "letterSpacing": 0,
                          "lineHeight": 21,
                          "textDecorationLine": undefined,
                        }
                      }
                    >
                      Yellow
                    </Text>
                  </View>
                </View>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "marginRight": 8,
                    "marginTop": 4,
                  }
                }
              >
                <View
                  accessibilityRole="checkbox"
                  accessibilityState={
                    Object {
                      "checked": false,
                      "disabled": false,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  dataSet={Object {}}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={Object {}}
                >
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "flex-start",
                      }
                    }
                  >
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "alignItems": "center",
                          "display": "flex",
                          "justifyContent": "center",
                        }
                      }
                    >
                      <View
                        dataSet={Object {}}
                        style={Object {}}
                      />
                      <View
                        checked={false}
                        colorScheme="gray"
                        dataSet={Object {}}
                        defaultIsChecked={false}
                        disabled={false}
                        feedbackId="field-612-feedback"
                        hasFeedbackText={false}
                        hasHelpText={false}
                        helpTextId="field-612-helptext"
                        isChecked={false}
                        isDisabled={false}
                        isRequired={true}
                        labelId="field-612-label"
                        nativeID="field-612"
                        onChange={[Function]}
                        required={true}
                        setHasFeedbackText={[Function]}
                        setHasHelpText={[Function]}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#fafafa",
                            "borderColor": "#a3a3a3",
                            "borderRadius": 4,
                            "borderWidth": 2,
                            "display": "flex",
                            "justifyContent": "center",
                            "opacity": 1,
                            "paddingBottom": 2,
                            "paddingLeft": 2,
                            "paddingRight": 2,
                            "paddingTop": 2,
                          }
                        }
                        value="Grey"
                      >
                        <View
                          dataSet={Object {}}
                          style={
                            Object {
                              "color": "#fafafa",
                              "height": 12,
                              "width": 12,
                            }
                          }
                        />
                      </View>
                    </View>
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "width": 8,
                        }
                      }
                    />
                    <Text
                      dataSet={Object {}}
                      style={
                        Object {
                          "backgroundColor": undefined,
                          "color": "#52525b",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontStyle": "normal",
                          "fontWeight": "500",
                          "letterSpacing": 0,
                          "lineHeight": 21,
                          "textDecorationLine": undefined,
                        }
                      }
                    >
                      Grey
                    </Text>
                  </View>
                </View>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "marginRight": 8,
                    "marginTop": 4,
                  }
                }
              >
                <View
                  accessibilityRole="checkbox"
                  accessibilityState={
                    Object {
                      "checked": false,
                      "disabled": false,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  dataSet={Object {}}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={Object {}}
                >
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "flex-start",
                      }
                    }
                  >
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "alignItems": "center",
                          "display": "flex",
                          "justifyContent": "center",
                        }
                      }
                    >
                      <View
                        dataSet={Object {}}
                        style={Object {}}
                      />
                      <View
                        checked={false}
                        colorScheme="info"
                        dataSet={Object {}}
                        defaultIsChecked={false}
                        disabled={false}
                        feedbackId="field-612-feedback"
                        hasFeedbackText={false}
                        hasHelpText={false}
                        helpTextId="field-612-helptext"
                        isChecked={false}
                        isDisabled={false}
                        isRequired={true}
                        labelId="field-612-label"
                        nativeID="field-612"
                        onChange={[Function]}
                        required={true}
                        setHasFeedbackText={[Function]}
                        setHasHelpText={[Function]}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#fafafa",
                            "borderColor": "#a3a3a3",
                            "borderRadius": 4,
                            "borderWidth": 2,
                            "display": "flex",
                            "justifyContent": "center",
                            "opacity": 1,
                            "paddingBottom": 2,
                            "paddingLeft": 2,
                            "paddingRight": 2,
                            "paddingTop": 2,
                          }
                        }
                        value="Other"
                      >
                        <View
                          dataSet={Object {}}
                          style={
                            Object {
                              "color": "#fafafa",
                              "height": 12,
                              "width": 12,
                            }
                          }
                        />
                      </View>
                    </View>
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "width": 8,
                        }
                      }
                    />
                    <Text
                      dataSet={Object {}}
                      style={
                        Object {
                          "backgroundColor": undefined,
                          "color": "#171717",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontStyle": "normal",
                          "fontWeight": "400",
                          "letterSpacing": 0,
                          "lineHeight": 21,
                          "textDecorationLine": undefined,
                        }
                      }
                    >
                      Other (describe in notes)
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          />
          <View
            dataSet={Object {}}
            isInvalid={false}
            isRequired={false}
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              feedbackId="field-620-feedback"
              hasFeedbackText={true}
              hasHelpText={false}
              helpTextId="field-620-helptext"
              isDisabled={false}
              isInvalid={false}
              isReadOnly={false}
              isRequired={false}
              labelId="field-620-label"
              nativeID="field-620-label"
              setHasFeedbackText={[Function]}
              setHasHelpText={[Function]}
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#737373",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Tube Id
              </Text>
            </View>
            <View
              dataSet={Object {}}
              isFocused={false}
              style={
                Object {
                  "alignItems": "center",
                  "borderColor": "#d4d4d4",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "overflow": "hidden",
                }
              }
            >
              <TextInput
                accessibilityDescribedBy="field-620-feedback"
                accessible={true}
                blurOnSubmit={false}
                dataSet={Object {}}
                disabled={false}
                editable={true}
                isRequired={false}
                maxLength={20}
                nativeID="field-620-input"
                onBlur={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                onKeyPress={[Function]}
                onSubmitEditing={[Function]}
                placeholder="Leave blank if tube does not have an id"
                placeholderTextColor="#a3a3a3"
                readOnly={false}
                required={false}
                returnKeyType="done"
                secureTextEntry={false}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#171717",
                    "flex": 1,
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "height": "100%",
                    "paddingBottom": 8,
                    "paddingLeft": 12,
                    "paddingRight": 12,
                    "paddingTop": 8,
                    "width": "100%",
                  }
                }
                value="LAB-1337"
              />
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              feedbackId="field-614-feedback"
              hasFeedbackText={false}
              hasHelpText={false}
              helpTextId="field-614-helptext"
              isDisabled={false}
              isInvalid={false}
              isReadOnly={false}
              isRequired={false}
              labelId="field-614-label"
              nativeID="field-614-label"
              setHasFeedbackText={[Function]}
              setHasHelpText={[Function]}
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#737373",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Location Description (limit 255 characters)
              </Text>
            </View>
            <View
              dataSet={Object {}}
              isFocused={false}
              style={
                Object {
                  "alignItems": "center",
                  "borderColor": "#d4d4d4",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "height": 80,
                  "overflow": "hidden",
                }
              }
            >
              <TextInput
                accessible={true}
                blurOnSubmit={false}
                dataSet={Object {}}
                disabled={false}
                editable={true}
                isRequired={false}
                maxLength={255}
                multiline={true}
                nativeID="field-614-input"
                onBlur={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                onKeyPress={[Function]}
                onSubmitEditing={[Function]}
                placeholder="ie: Blue Lake, North Cascades, WA"
                placeholderTextColor="#a3a3a3"
                readOnly={false}
                required={false}
                returnKeyType="done"
                secureTextEntry={false}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#171717",
                    "flex": 1,
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "height": "100%",
                    "paddingBottom": 8,
                    "paddingLeft": 12,
                    "paddingRight": 12,
                    "paddingTop": 8,
                    "width": "100%",
                  }
                }
                textAlignVertical="top"
                value="test location"
              />
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              feedbackId="field-615-feedback"
              hasFeedbackText={false}
              hasHelpText={false}
              helpTextId="field-615-helptext"
              isDisabled={false}
              isInvalid={false}
              isReadOnly={false}
              isRequired={false}
              labelId="field-615-label"
              nativeID="field-615-label"
              setHasFeedbackText={[Function]}
              setHasHelpText={[Function]}
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#737373",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Notes (limit 255 characters)
              </Text>
            </View>
            <View
              dataSet={Object {}}
              isFocused={false}
              style={
                Object {
                  "alignItems": "center",
                  "borderColor": "#d4d4d4",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "height": 80,
                  "overflow": "hidden",
                }
              }
            >
              <TextInput
                accessible={true}
                blurOnSubmit={true}
                dataSet={Object {}}
                disabled={false}
                editable={true}
                isRequired={false}
                maxLength={255}
                multiline={true}
                nativeID="field-615-input"
                onBlur={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                onKeyPress={[Function]}
                placeholder="ie. dark red algae on glacial ice"
                placeholderTextColor="#a3a3a3"
                readOnly={false}
                required={false}
                returnKeyType="done"
                secureTextEntry={false}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#171717",
                    "flex": 1,
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "height": "100%",
                    "paddingBottom": 8,
                    "paddingLeft": 12,
                    "paddingRight": 12,
                    "paddingTop": 8,
                    "width": "100%",
                  }
                }
                textAlignVertical="top"
                value="test notes"
              />
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              feedbackId="field-616-feedback"
              hasFeedbackText={false}
              hasHelpText={false}
              helpTextId="field-616-helptext"
              isDisabled={false}
              isInvalid={false}
              isReadOnly={false}
              isRequired={false}
              labelId="field-616-label"
              nativeID="field-616-label"
              setHasFeedbackText={[Function]}
              setHasHelpText={[Function]}
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#737373",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Select Photos (limit 4)
              </Text>
            </View>
            <View
              accessible={true}
              collapsable={false}
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={Object {}}
              testID="photo-selector"
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <Image
                  accessibilityLabel="some alt text here"
                  alt="some alt text here"
                  dataSet={Object {}}
                  onError={[Function]}
                  source={
                    Object {
                      "uri": "https://snowalgaestorage.blob.core.windows.net/photos/23.jpg",
                    }
                  }
                  style={
                    Object {
                      "height": 742,
                      "maxWidth": "100%",
                      "width": 371,
                    }
                  }
                />
                <View
                  dataSet={Object {}}
                  style={Object {}}
                />
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "paddingRight": 8,
                    }
                  }
                />
                <View
                  dataSet={Object {}}
                  style={Object {}}
                />
                <Image
                  accessibilityLabel="some alt text here"
                  alt="some alt text here"
                  dataSet={Object {}}
                  onError={[Function]}
                  source={
                    Object {
                      "uri": "https://snowalgaestorage.blob.core.windows.net/photos/46.jpg",
                    }
                  }
                  style={
                    Object {
                      "height": 742,
                      "maxWidth": "100%",
                      "width": 371,
                    }
                  }
                />
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "marginBottom": 8,
                "marginTop": 8,
              }
            }
          />
        </View>
      </View>
    </RCTScrollView>
  </View>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "display": "none",
        },
      ]
    }
  >
    <View
      collapsable={false}
      pointerEvents="none"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "transform": Array [
            Object {
              "translateY": 0,
            },
            Object {
              "translateX": 0,
            },
            Object {
              "scale": 1,
            },
            Object {
              "scaleX": 1,
            },
            Object {
              "scaleY": 1,
            },
            Object {
              "rotate": "0deg",
            },
          ],
        }
      }
    >
      <View
        accessible={false}
        collapsable={false}
        dataSet={Object {}}
        focusable={true}
        importantForAccessibility="no"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "rgb(0, 0, 0)",
            "bottom": 0,
            "left": 0,
            "opacity": 0.3,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
    <View
      collapsable={false}
      pointerEvents="none"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "transform": Array [
            Object {
              "translateY": 0,
            },
            Object {
              "translateX": 0,
            },
            Object {
              "scale": 1,
            },
            Object {
              "scaleX": 1,
            },
            Object {
              "scaleY": 1,
            },
            Object {
              "rotate": "0deg",
            },
          ],
        }
      }
    >
      <View
        closeOnOverlayClick={true}
        dataSet={Object {}}
        pointerEvents="box-none"
        style={
          Object {
            "alignItems": "center",
            "height": "100%",
            "justifyContent": "center",
            "width": "100%",
          }
        }
        testID="gps-enable-manual-coordinates-modal"
      >
        <View
          accessibilityViewIsModal={true}
          aria-modal="true"
          dataSet={Object {}}
          onAccessibilityEscape={[Function]}
          style={
            Object {
              "backgroundColor": "#fafafa",
              "borderRadius": 8,
              "elevation": 2,
              "maxHeight": 1184,
              "maxWidth": 320,
              "overflow": "hidden",
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.2,
              "shadowRadius": 1.41,
              "width": "65%",
            }
          }
        >
          <View
            accessibilityRole="button"
            accessible={true}
            collapsable={false}
            colorScheme="coolGray"
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "transparent",
                "borderRadius": 4,
                "paddingBottom": 8,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 8,
                "position": "absolute",
                "right": 12,
                "top": 12,
                "zIndex": 1,
              }
            }
          >
            <RNSVGSvgView
              accessibilityRole="image"
              align="xMidYMid"
              bbHeight="16"
              bbWidth="16"
              dataSet={Object {}}
              focusable={false}
              meetOrSlice={0}
              minX={0}
              minY={0}
              stroke=""
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  Object {
                    "color": "#737373",
                    "height": 16,
                    "width": 16,
                  },
                  Object {
                    "flex": 0,
                    "height": 16,
                    "width": 16,
                  },
                ]
              }
              tintColor="#737373"
              vbHeight={24}
              vbWidth={24}
            >
              <RNSVGGroup
                propList={
                  Array [
                    "stroke",
                  ]
                }
                stroke={null}
              >
                <RNSVGGroup>
                  <RNSVGPath
                    d="M12 9.77778L4.22222 2L2 4.22222L9.77778 12L2 19.7778L4.22222 22L12 14.2222L19.7778 22L22 19.7778L14.2222 12L22 4.22222L19.7778 2L12 9.77778Z"
                    fill={
                      Object {
                        "type": 2,
                      }
                    }
                    propList={
                      Array [
                        "fill",
                        "stroke",
                      ]
                    }
                    stroke={null}
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#fafafa",
                "borderBottomWidth": 1,
                "borderColor": "#d4d4d4",
                "paddingBottom": 16,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                  "letterSpacing": 0,
                  "lineHeight": 20,
                  "textDecorationLine": undefined,
                }
              }
            >
              Enter coordinates manually?
            </Text>
          </View>
          <RCTScrollView
            contentContainerStyle={
              Array [
                Object {},
                Object {
                  "dataSet": Object {},
                },
                Object {},
              ]
            }
            dataSet={Object {}}
            style={Object {}}
          >
            <View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "paddingBottom": 16,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 16,
                  }
                }
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Some users enter coordinates manually if they cannot acquire GPS signal or when they return home.

This message can be disabled in Settings.
                </Text>
              </View>
            </View>
          </RCTScrollView>
          <View
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#fafafa",
                "borderColor": "#d4d4d4",
                "borderTopWidth": 1,
                "flexDirection": "row",
                "flexWrap": "wrap",
                "justifyContent": "flex-end",
                "paddingBottom": 16,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 16,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <View
                accessibilityRole="button"
                accessible={true}
                collapsable={false}
                colorScheme="blueGray"
                dataSet={Object {}}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "borderRadius": 4,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 10,
                    "paddingLeft": 12,
                    "paddingRight": 12,
                    "paddingTop": 10,
                  }
                }
                testID="modal-no-button"
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                  test={true}
                >
                  <View
                    dataSet={Object {}}
                    style={Object {}}
                  >
                    <Text
                      dataSet={Object {}}
                      style={
                        Object {
                          "backgroundColor": undefined,
                          "color": "#475569",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontStyle": "normal",
                          "fontWeight": "400",
                          "letterSpacing": 0,
                          "lineHeight": 21,
                          "textDecorationLine": undefined,
                        }
                      }
                    >
                      Cancel
                    </Text>
                  </View>
                </View>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <View
                accessibilityRole="button"
                accessible={true}
                collapsable={false}
                colorScheme="primary"
                dataSet={Object {}}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#0891b2",
                    "borderRadius": 4,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 10,
                    "paddingLeft": 12,
                    "paddingRight": 12,
                    "paddingTop": 10,
                  }
                }
                testID="modal-confirm-button"
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                  test={true}
                >
                  <View
                    dataSet={Object {}}
                    style={Object {}}
                  >
                    <Text
                      dataSet={Object {}}
                      style={
                        Object {
                          "backgroundColor": undefined,
                          "color": "#fafafa",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontStyle": "normal",
                          "fontWeight": "400",
                          "letterSpacing": 0,
                          "lineHeight": 21,
                          "textDecorationLine": undefined,
                        }
                      }
                    >
                      Confirm
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "display": "flex",
          "overflow": "hidden",
        },
      ]
    }
  >
    <View
      collapsable={false}
      pointerEvents="none"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "transform": Array [
            Object {
              "translateY": 0,
            },
            Object {
              "translateX": 0,
            },
            Object {
              "scale": 1,
            },
            Object {
              "scaleX": 1,
            },
            Object {
              "scaleY": 1,
            },
            Object {
              "rotate": "0deg",
            },
          ],
        }
      }
    >
      <View
        accessible={false}
        collapsable={false}
        dataSet={Object {}}
        focusable={true}
        importantForAccessibility="no"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "rgb(0, 0, 0)",
            "bottom": 0,
            "left": 0,
            "opacity": 0.3,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
    <View
      collapsable={false}
      pointerEvents="none"
      style={
        Object {
          "bottom": 0,
          "height": "100%",
          "left": 0,
          "opacity": 1,
          "position": "absolute",
          "right": 0,
          "transform": Array [
            Object {
              "translateY": 0,
            },
            Object {
              "translateX": 0,
            },
            Object {
              "scale": 1,
            },
            Object {
              "scaleX": 1,
            },
            Object {
              "scaleY": 1,
            },
            Object {
              "rotate": "0deg",
            },
          ],
        }
      }
    >
      <View
        dataSet={Object {}}
        onLayout={[Function]}
        pointerEvents="box-none"
        style={
          Object {
            "height": "100%",
            "opacity": 0,
          }
        }
      >
        <View
          closeOnOverlayClick={true}
          dataSet={Object {}}
          pointerEvents="box-none"
          style={
            Object {
              "alignItems": "center",
              "height": "100%",
              "justifyContent": "flex-end",
              "width": "100%",
            }
          }
        >
          <View
            collapsable={false}
            onLayout={[Function]}
            pointerEvents="box-none"
            style={
              Object {
                "transform": Array [
                  Object {
                    "translateY": 0,
                  },
                ],
                "width": "100%",
              }
            }
          >
            <View
              collapsable={false}
              dataSet={Object {}}
              onMoveShouldSetResponder={[Function]}
              onMoveShouldSetResponderCapture={[Function]}
              onResponderEnd={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderReject={[Function]}
              onResponderRelease={[Function]}
              onResponderStart={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              onStartShouldSetResponderCapture={[Function]}
              style={
                Object {
                  "paddingBottom": 8,
                  "paddingTop": 8,
                }
              }
            />
            <View
              accessibilityViewIsModal={true}
              aria-modal="true"
              dataSet={Object {}}
              onAccessibilityEscape={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderRadius": 0,
                  "borderTopLeftRadius": 20,
                  "borderTopRightRadius": 20,
                  "elevation": 2,
                  "maxHeight": 1184,
                  "overflow": "hidden",
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": 0,
                  },
                  "shadowOpacity": 0.2,
                  "shadowRadius": 1.41,
                  "width": "100%",
                }
              }
            >
              <View
                collapsable={false}
                dataSet={Object {}}
                onMoveShouldSetResponder={[Function]}
                onMoveShouldSetResponderCapture={[Function]}
                onResponderEnd={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderReject={[Function]}
                onResponderRelease={[Function]}
                onResponderStart={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                onStartShouldSetResponderCapture={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "marginTop": -8,
                    "paddingBottom": 12,
                    "paddingTop": 12,
                    "width": "100%",
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": "#737373",
                      "borderRadius": 2,
                      "height": 4,
                      "width": 40,
                    }
                  }
                />
              </View>
              <RCTScrollView
                contentContainerStyle={
                  Array [
                    Object {},
                    Object {
                      "dataSet": Object {},
                    },
                    Object {},
                  ]
                }
                data={
                  Array [
                    Object {
                      "label": "Fist",
                      "value": "Fist",
                    },
                    Object {
                      "label": "Shoe Box",
                      "value": "Shoe Box",
                    },
                    Object {
                      "label": "Coffee Table",
                      "value": "Coffee Table",
                    },
                    Object {
                      "label": "Car",
                      "value": "Car",
                    },
                    Object {
                      "label": "Bus",
                      "value": "Bus",
                    },
                    Object {
                      "label": "Playground",
                      "value": "Playground",
                    },
                    Object {
                      "label": "Sports Field",
                      "value": "Sports Field",
                    },
                    Object {
                      "label": "Other (describe in notes)",
                      "value": "Other",
                    },
                  ]
                }
                dataSet={Object {}}
                getItem={[Function]}
                getItemCount={[Function]}
                keyExtractor={[Function]}
                onContentSizeChange={[Function]}
                onLayout={[Function]}
                onMomentumScrollBegin={[Function]}
                onMomentumScrollEnd={[Function]}
                onScroll={[Function]}
                onScrollBeginDrag={[Function]}
                onScrollEndDrag={[Function]}
                removeClippedSubviews={false}
                renderItem={[Function]}
                scrollEventThrottle={50}
                stickyHeaderIndices={Array []}
                style={
                  Object {
                    "width": "100%",
                  }
                }
                viewabilityConfigCallbackPairs={Array []}
              >
                <View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessibilityState={
                        Object {
                          "selected": true,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      dataSet={Object {}}
                      focusable={true}
                      label="Fist"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "backgroundColor": "#fafafa",
                          "justifyContent": "flex-start",
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                          "width": "100%",
                        }
                      }
                      value="Fist"
                    >
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "flexDirection": "row",
                          }
                        }
                        test={true}
                      >
                        <View
                          dataSet={Object {}}
                          style={Object {}}
                        >
                          <Text
                            dataSet={Object {}}
                            style={
                              Object {
                                "backgroundColor": undefined,
                                "color": "#171717",
                                "fontFamily": undefined,
                                "fontSize": 16,
                                "fontStyle": "normal",
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 24,
                                "textDecorationLine": undefined,
                              }
                            }
                          >
                            Fist
                          </Text>
                        </View>
                        <View
                          dataSet={Object {}}
                          style={
                            Object {
                              "width": 16,
                            }
                          }
                        />
                        <RNSVGSvgView
                          accessibilityRole="image"
                          align="xMidYMid"
                          bbHeight="20"
                          bbWidth="20"
                          dataSet={Object {}}
                          focusable={false}
                          meetOrSlice={0}
                          minX={0}
                          minY={0}
                          stroke=""
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderWidth": 0,
                              },
                              Object {
                                "color": "#737373",
                                "height": 20,
                                "width": 20,
                              },
                              Object {
                                "flex": 0,
                                "height": 20,
                                "width": 20,
                              },
                            ]
                          }
                          tintColor="#737373"
                          vbHeight={24}
                          vbWidth={24}
                        >
                          <RNSVGGroup
                            propList={
                              Array [
                                "stroke",
                              ]
                            }
                            stroke={null}
                          >
                            <RNSVGGroup>
                              <RNSVGPath
                                d="M8.53115 15.1856L3.96198 10.744L2 12.6512L8.53115 19L22 5.9072L20.038 4L8.53115 15.1856Z"
                                fill={
                                  Object {
                                    "type": 2,
                                  }
                                }
                                propList={
                                  Array [
                                    "fill",
                                    "stroke",
                                  ]
                                }
                                stroke={null}
                              />
                            </RNSVGGroup>
                          </RNSVGGroup>
                        </RNSVGSvgView>
                      </View>
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessibilityState={
                        Object {
                          "selected": false,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      dataSet={Object {}}
                      focusable={true}
                      label="Shoe Box"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "backgroundColor": "#fafafa",
                          "justifyContent": "flex-start",
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                          "width": "100%",
                        }
                      }
                      value="Shoe Box"
                    >
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "flexDirection": "row",
                          }
                        }
                        test={true}
                      >
                        <View
                          dataSet={Object {}}
                          style={Object {}}
                        >
                          <Text
                            dataSet={Object {}}
                            style={
                              Object {
                                "backgroundColor": undefined,
                                "color": "#171717",
                                "fontFamily": undefined,
                                "fontSize": 16,
                                "fontStyle": "normal",
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 24,
                                "textDecorationLine": undefined,
                              }
                            }
                          >
                            Shoe Box
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessibilityState={
                        Object {
                          "selected": false,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      dataSet={Object {}}
                      focusable={true}
                      label="Coffee Table"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "backgroundColor": "#fafafa",
                          "justifyContent": "flex-start",
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                          "width": "100%",
                        }
                      }
                      value="Coffee Table"
                    >
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "flexDirection": "row",
                          }
                        }
                        test={true}
                      >
                        <View
                          dataSet={Object {}}
                          style={Object {}}
                        >
                          <Text
                            dataSet={Object {}}
                            style={
                              Object {
                                "backgroundColor": undefined,
                                "color": "#171717",
                                "fontFamily": undefined,
                                "fontSize": 16,
                                "fontStyle": "normal",
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 24,
                                "textDecorationLine": undefined,
                              }
                            }
                          >
                            Coffee Table
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessibilityState={
                        Object {
                          "selected": false,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      dataSet={Object {}}
                      focusable={true}
                      label="Car"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "backgroundColor": "#fafafa",
                          "justifyContent": "flex-start",
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                          "width": "100%",
                        }
                      }
                      value="Car"
                    >
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "flexDirection": "row",
                          }
                        }
                        test={true}
                      >
                        <View
                          dataSet={Object {}}
                          style={Object {}}
                        >
                          <Text
                            dataSet={Object {}}
                            style={
                              Object {
                                "backgroundColor": undefined,
                                "color": "#171717",
                                "fontFamily": undefined,
                                "fontSize": 16,
                                "fontStyle": "normal",
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 24,
                                "textDecorationLine": undefined,
                              }
                            }
                          >
                            Car
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessibilityState={
                        Object {
                          "selected": false,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      dataSet={Object {}}
                      focusable={true}
                      label="Bus"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "backgroundColor": "#fafafa",
                          "justifyContent": "flex-start",
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                          "width": "100%",
                        }
                      }
                      value="Bus"
                    >
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "flexDirection": "row",
                          }
                        }
                        test={true}
                      >
                        <View
                          dataSet={Object {}}
                          style={Object {}}
                        >
                          <Text
                            dataSet={Object {}}
                            style={
                              Object {
                                "backgroundColor": undefined,
                                "color": "#171717",
                                "fontFamily": undefined,
                                "fontSize": 16,
                                "fontStyle": "normal",
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 24,
                                "textDecorationLine": undefined,
                              }
                            }
                          >
                            Bus
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessibilityState={
                        Object {
                          "selected": false,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      dataSet={Object {}}
                      focusable={true}
                      label="Playground"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "backgroundColor": "#fafafa",
                          "justifyContent": "flex-start",
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                          "width": "100%",
                        }
                      }
                      value="Playground"
                    >
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "flexDirection": "row",
                          }
                        }
                        test={true}
                      >
                        <View
                          dataSet={Object {}}
                          style={Object {}}
                        >
                          <Text
                            dataSet={Object {}}
                            style={
                              Object {
                                "backgroundColor": undefined,
                                "color": "#171717",
                                "fontFamily": undefined,
                                "fontSize": 16,
                                "fontStyle": "normal",
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 24,
                                "textDecorationLine": undefined,
                              }
                            }
                          >
                            Playground
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessibilityState={
                        Object {
                          "selected": false,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      dataSet={Object {}}
                      focusable={true}
                      label="Sports Field"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "backgroundColor": "#fafafa",
                          "justifyContent": "flex-start",
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                          "width": "100%",
                        }
                      }
                      value="Sports Field"
                    >
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "flexDirection": "row",
                          }
                        }
                        test={true}
                      >
                        <View
                          dataSet={Object {}}
                          style={Object {}}
                        >
                          <Text
                            dataSet={Object {}}
                            style={
                              Object {
                                "backgroundColor": undefined,
                                "color": "#171717",
                                "fontFamily": undefined,
                                "fontSize": 16,
                                "fontStyle": "normal",
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 24,
                                "textDecorationLine": undefined,
                              }
                            }
                          >
                            Sports Field
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessibilityState={
                        Object {
                          "selected": false,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      dataSet={Object {}}
                      focusable={true}
                      label="Other (describe in notes)"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "backgroundColor": "#fafafa",
                          "justifyContent": "flex-start",
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                          "width": "100%",
                        }
                      }
                      value="Other"
                    >
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "flexDirection": "row",
                          }
                        }
                        test={true}
                      >
                        <View
                          dataSet={Object {}}
                          style={Object {}}
                        >
                          <Text
                            dataSet={Object {}}
                            style={
                              Object {
                                "backgroundColor": undefined,
                                "color": "#171717",
                                "fontFamily": undefined,
                                "fontSize": 16,
                                "fontStyle": "normal",
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 24,
                                "textDecorationLine": undefined,
                              }
                            }
                          >
                            Other (describe in notes)
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </RCTScrollView>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`RecordScreen test suite renders 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    style={
      Object {
        "height": "100%",
        "left": 0,
        "position": "absolute",
        "top": 0,
        "transform": Array [
          Object {
            "translateY": 0,
          },
        ],
        "width": "100%",
      }
    }
  >
    <RCTScrollView
      automaticallyAdjustKeyboardInsets={true}
      contentContainerStyle={
        Array [
          Object {},
          Object {
            "dataSet": Object {},
          },
          Object {},
        ]
      }
      dataSet={Object {}}
      style={Object {}}
    >
      <View>
        <View
          dataSet={Object {}}
          style={
            Object {
              "paddingLeft": 8,
              "paddingRight": 8,
            }
          }
        >
          <View
            dataSet={Object {}}
            isRequired={true}
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              feedbackId="field-19-feedback"
              hasFeedbackText={false}
              hasHelpText={false}
              helpTextId="field-19-helptext"
              isDisabled={false}
              isInvalid={false}
              isReadOnly={false}
              isRequired={true}
              labelId="field-19-label"
              nativeID="field-19-label"
              setHasFeedbackText={[Function]}
              setHasHelpText={[Function]}
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#737373",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Are you Reporting a Sighting or Taking a Sample?
              </Text>
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#dc2626",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                *
              </Text>
            </View>
            <View
              accessibilityLabel="select type of record"
              accessibilityRole="radiogroup"
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              dataSet={Object {}}
              defaultValue="Sighting"
              name="algae record type selector"
              onChange={[Function]}
              style={
                Object {
                  "alignItems": "flex-start",
                }
              }
              testID="record-type-selector"
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "marginRight": 12,
                    }
                  }
                >
                  <View
                    accessibilityRole="radio"
                    accessibilityState={
                      Object {
                        "checked": true,
                        "disabled": false,
                      }
                    }
                    accessible={true}
                    checked={true}
                    collapsable={false}
                    dataSet={Object {}}
                    feedbackId="field-1-feedback"
                    focusable={true}
                    formControlContext={
                      Object {
                        "feedbackId": "field-1-feedback",
                        "hasFeedbackText": false,
                        "hasHelpText": false,
                        "helpTextId": "field-1-helptext",
                        "isDisabled": false,
                        "isInvalid": false,
                        "isReadOnly": false,
                        "isRequired": true,
                        "labelId": "field-1-label",
                        "nativeID": "field-1",
                        "setHasFeedbackText": [Function],
                        "setHasHelpText": [Function],
                      }
                    }
                    hasFeedbackText={false}
                    hasHelpText={false}
                    helpTextId="field-1-helptext"
                    isInvalid={false}
                    isReadOnly={false}
                    isRequired={true}
                    labelId="field-1-label"
                    nativeID="field-1"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    setHasFeedbackText={[Function]}
                    setHasHelpText={[Function]}
                    state={
                      Object {
                        "lastFocusedValue": null,
                        "name": "algae record type selector",
                        "selectedValue": "Sighting",
                        "setLastFocusedValue": [Function],
                        "setSelectedValue": [Function],
                      }
                    }
                    style={Object {}}
                    value="Sighting"
                  >
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        }
                      }
                    >
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "alignItems": "center",
                            "display": "flex",
                            "justifyContent": "center",
                          }
                        }
                      >
                        <View
                          dataSet={Object {}}
                          style={Object {}}
                        />
                        <View
                          colorScheme="primary"
                          dataSet={Object {}}
                          defaultIsChecked={false}
                          feedbackId="field-19-feedback"
                          formControlContext={
                            Object {
                              "feedbackId": "field-19-feedback",
                              "hasFeedbackText": false,
                              "hasHelpText": false,
                              "helpTextId": "field-19-helptext",
                              "isDisabled": false,
                              "isInvalid": false,
                              "isReadOnly": false,
                              "isRequired": true,
                              "labelId": "field-19-label",
                              "nativeID": "field-19",
                              "setHasFeedbackText": [Function],
                              "setHasHelpText": [Function],
                            }
                          }
                          hasFeedbackText={false}
                          hasHelpText={false}
                          helpTextId="field-19-helptext"
                          isDisabled={false}
                          isInvalid={false}
                          isReadOnly={false}
                          isRequired={true}
                          labelId="field-19-label"
                          nativeID="field-19"
                          setHasFeedbackText={[Function]}
                          setHasHelpText={[Function]}
                          state={
                            Object {
                              "lastFocusedValue": null,
                              "name": "algae record type selector",
                              "selectedValue": "Sighting",
                              "setLastFocusedValue": [Function],
                              "setSelectedValue": [Function],
                            }
                          }
                          style={
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "#fafafa",
                              "borderColor": "#0891b2",
                              "borderRadius": 9999,
                              "borderWidth": 2,
                              "display": "flex",
                              "justifyContent": "center",
                              "paddingBottom": 4,
                              "paddingLeft": 4,
                              "paddingRight": 4,
                              "paddingTop": 4,
                            }
                          }
                          value="Sighting"
                        >
                          <RNSVGSvgView
                            accessibilityRole="image"
                            align="xMidYMid"
                            bbHeight="12"
                            bbWidth="12"
                            dataSet={Object {}}
                            focusable={false}
                            meetOrSlice={0}
                            minX={0}
                            minY={0}
                            stroke=""
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderWidth": 0,
                                },
                                Object {
                                  "color": "#0891b2",
                                  "height": 12,
                                  "opacity": 1,
                                  "width": 12,
                                },
                                Object {
                                  "flex": 0,
                                  "height": 12,
                                  "width": 12,
                                },
                              ]
                            }
                            tintColor="#0891b2"
                            vbHeight={24}
                            vbWidth={24}
                          >
                            <RNSVGGroup
                              opacity={1}
                              propList={
                                Array [
                                  "stroke",
                                ]
                              }
                              stroke={null}
                            >
                              <RNSVGGroup>
                                <RNSVGPath
                                  d="M0 12C-2.34822e-08 13.5759 0.310389 15.1363 0.913445 16.5922C1.5165 18.0481 2.40042 19.371 3.51472 20.4853C4.62902 21.5996 5.95189 22.4835 7.4078 23.0866C8.86371 23.6896 10.4241 24 12 24C13.5759 24 15.1363 23.6896 16.5922 23.0866C18.0481 22.4835 19.371 21.5996 20.4853 20.4853C21.5996 19.371 22.4835 18.0481 23.0866 16.5922C23.6896 15.1363 24 13.5759 24 12C24 10.4241 23.6896 8.86371 23.0866 7.4078C22.4835 5.95189 21.5996 4.62902 20.4853 3.51472C19.371 2.40042 18.0481 1.5165 16.5922 0.913446C15.1363 0.310389 13.5759 0 12 0C10.4241 0 8.86371 0.310389 7.4078 0.913446C5.95189 1.5165 4.62902 2.40042 3.51472 3.51472C2.40042 4.62902 1.5165 5.95189 0.913445 7.4078C0.310389 8.86371 -2.34822e-08 10.4241 0 12Z"
                                  fill={
                                    Object {
                                      "type": 2,
                                    }
                                  }
                                  propList={
                                    Array [
                                      "fill",
                                      "stroke",
                                    ]
                                  }
                                  stroke={null}
                                />
                              </RNSVGGroup>
                            </RNSVGGroup>
                          </RNSVGSvgView>
                        </View>
                      </View>
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "width": 8,
                          }
                        }
                      />
                      <Text
                        dataSet={Object {}}
                        style={
                          Object {
                            "backgroundColor": undefined,
                            "color": "#171717",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontStyle": "normal",
                            "fontWeight": "400",
                            "letterSpacing": 0,
                            "lineHeight": 24,
                            "textDecorationLine": undefined,
                          }
                        }
                      >
                        Sighting
                      </Text>
                    </View>
                  </View>
                </View>
                <View
                  dataSet={Object {}}
                  style={Object {}}
                />
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "marginRight": 12,
                    }
                  }
                >
                  <View
                    accessibilityRole="radio"
                    accessibilityState={
                      Object {
                        "checked": false,
                        "disabled": false,
                      }
                    }
                    accessible={true}
                    checked={false}
                    collapsable={false}
                    dataSet={Object {}}
                    feedbackId="field-1-feedback"
                    focusable={true}
                    formControlContext={
                      Object {
                        "feedbackId": "field-1-feedback",
                        "hasFeedbackText": false,
                        "hasHelpText": false,
                        "helpTextId": "field-1-helptext",
                        "isDisabled": false,
                        "isInvalid": false,
                        "isReadOnly": false,
                        "isRequired": true,
                        "labelId": "field-1-label",
                        "nativeID": "field-1",
                        "setHasFeedbackText": [Function],
                        "setHasHelpText": [Function],
                      }
                    }
                    hasFeedbackText={false}
                    hasHelpText={false}
                    helpTextId="field-1-helptext"
                    isInvalid={false}
                    isReadOnly={false}
                    isRequired={true}
                    labelId="field-1-label"
                    nativeID="field-1"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    setHasFeedbackText={[Function]}
                    setHasHelpText={[Function]}
                    state={
                      Object {
                        "lastFocusedValue": null,
                        "name": "algae record type selector",
                        "selectedValue": "Sighting",
                        "setLastFocusedValue": [Function],
                        "setSelectedValue": [Function],
                      }
                    }
                    style={Object {}}
                    value="Sample"
                  >
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        }
                      }
                    >
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "alignItems": "center",
                            "display": "flex",
                            "justifyContent": "center",
                          }
                        }
                      >
                        <View
                          dataSet={Object {}}
                          style={Object {}}
                        />
                        <View
                          colorScheme="primary"
                          dataSet={Object {}}
                          defaultIsChecked={false}
                          feedbackId="field-19-feedback"
                          formControlContext={
                            Object {
                              "feedbackId": "field-19-feedback",
                              "hasFeedbackText": false,
                              "hasHelpText": false,
                              "helpTextId": "field-19-helptext",
                              "isDisabled": false,
                              "isInvalid": false,
                              "isReadOnly": false,
                              "isRequired": true,
                              "labelId": "field-19-label",
                              "nativeID": "field-19",
                              "setHasFeedbackText": [Function],
                              "setHasHelpText": [Function],
                            }
                          }
                          hasFeedbackText={false}
                          hasHelpText={false}
                          helpTextId="field-19-helptext"
                          isDisabled={false}
                          isInvalid={false}
                          isReadOnly={false}
                          isRequired={true}
                          labelId="field-19-label"
                          nativeID="field-19"
                          setHasFeedbackText={[Function]}
                          setHasHelpText={[Function]}
                          state={
                            Object {
                              "lastFocusedValue": null,
                              "name": "algae record type selector",
                              "selectedValue": "Sighting",
                              "setLastFocusedValue": [Function],
                              "setSelectedValue": [Function],
                            }
                          }
                          style={
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "#fafafa",
                              "borderColor": "#a3a3a3",
                              "borderRadius": 9999,
                              "borderWidth": 2,
                              "display": "flex",
                              "justifyContent": "center",
                              "paddingBottom": 4,
                              "paddingLeft": 4,
                              "paddingRight": 4,
                              "paddingTop": 4,
                            }
                          }
                          value="Sample"
                        >
                          <RNSVGSvgView
                            accessibilityRole="image"
                            align="xMidYMid"
                            bbHeight="12"
                            bbWidth="12"
                            dataSet={Object {}}
                            focusable={false}
                            meetOrSlice={0}
                            minX={0}
                            minY={0}
                            stroke=""
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderWidth": 0,
                                },
                                Object {
                                  "color": "#737373",
                                  "height": 12,
                                  "opacity": 0,
                                  "width": 12,
                                },
                                Object {
                                  "flex": 0,
                                  "height": 12,
                                  "width": 12,
                                },
                              ]
                            }
                            tintColor="#737373"
                            vbHeight={24}
                            vbWidth={24}
                          >
                            <RNSVGGroup
                              opacity={0}
                              propList={
                                Array [
                                  "stroke",
                                ]
                              }
                              stroke={null}
                            >
                              <RNSVGGroup>
                                <RNSVGPath
                                  d="M0 12C-2.34822e-08 13.5759 0.310389 15.1363 0.913445 16.5922C1.5165 18.0481 2.40042 19.371 3.51472 20.4853C4.62902 21.5996 5.95189 22.4835 7.4078 23.0866C8.86371 23.6896 10.4241 24 12 24C13.5759 24 15.1363 23.6896 16.5922 23.0866C18.0481 22.4835 19.371 21.5996 20.4853 20.4853C21.5996 19.371 22.4835 18.0481 23.0866 16.5922C23.6896 15.1363 24 13.5759 24 12C24 10.4241 23.6896 8.86371 23.0866 7.4078C22.4835 5.95189 21.5996 4.62902 20.4853 3.51472C19.371 2.40042 18.0481 1.5165 16.5922 0.913446C15.1363 0.310389 13.5759 0 12 0C10.4241 0 8.86371 0.310389 7.4078 0.913446C5.95189 1.5165 4.62902 2.40042 3.51472 3.51472C2.40042 4.62902 1.5165 5.95189 0.913445 7.4078C0.310389 8.86371 -2.34822e-08 10.4241 0 12Z"
                                  fill={
                                    Object {
                                      "type": 2,
                                    }
                                  }
                                  propList={
                                    Array [
                                      "fill",
                                      "stroke",
                                    ]
                                  }
                                  stroke={null}
                                />
                              </RNSVGGroup>
                            </RNSVGGroup>
                          </RNSVGSvgView>
                        </View>
                      </View>
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "width": 8,
                          }
                        }
                      />
                      <Text
                        dataSet={Object {}}
                        style={
                          Object {
                            "backgroundColor": undefined,
                            "color": "#171717",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontStyle": "normal",
                            "fontWeight": "400",
                            "letterSpacing": 0,
                            "lineHeight": 24,
                            "textDecorationLine": undefined,
                          }
                        }
                      >
                        Sample
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          />
          <View
            dataSet={Object {}}
            isRequired={true}
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              feedbackId="field-20-feedback"
              hasFeedbackText={false}
              hasHelpText={false}
              helpTextId="field-20-helptext"
              isDisabled={false}
              isInvalid={false}
              isReadOnly={false}
              isRequired={true}
              labelId="field-20-label"
              nativeID="field-20-label"
              setHasFeedbackText={[Function]}
              setHasHelpText={[Function]}
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#737373",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Date
              </Text>
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#dc2626",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                *
              </Text>
            </View>
            <View
              accessible={true}
              collapsable={false}
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={Object {}}
              testID="calendar-pressable"
            >
              <View
                pointerEvents="none"
              >
                <View
                  dataSet={Object {}}
                  isFocused={false}
                  style={
                    Object {
                      "alignItems": "center",
                      "borderColor": "#d4d4d4",
                      "borderRadius": 4,
                      "borderWidth": 1,
                      "flexDirection": "row",
                      "overflow": "hidden",
                    }
                  }
                >
                  <TextInput
                    accessibilityRequired={true}
                    accessible={true}
                    dataSet={Object {}}
                    disabled={false}
                    editable={true}
                    isRequired={true}
                    nativeID="field-20-input"
                    onBlur={[Function]}
                    onFocus={[Function]}
                    onKeyPress={[Function]}
                    placeholderTextColor="#a3a3a3"
                    readOnly={false}
                    required={true}
                    secureTextEntry={false}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "#171717",
                        "flex": 1,
                        "fontFamily": undefined,
                        "fontSize": 16,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "height": "100%",
                        "paddingBottom": 8,
                        "paddingLeft": 12,
                        "paddingRight": 12,
                        "paddingTop": 8,
                        "width": "100%",
                      }
                    }
                    value="2022-01-01"
                  />
                </View>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          />
          <View
            accessible={true}
            collapsable={false}
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={Object {}}
            testID="gps-manual-pressable"
          >
            <View
              dataSet={Object {}}
              pointerEvents="none"
              style={Object {}}
            >
              <View
                dataSet={Object {}}
                isInvalid={false}
                isRequired={true}
                style={
                  Object {
                    "width": "100%",
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  feedbackId="field-21-feedback"
                  hasFeedbackText={true}
                  hasHelpText={false}
                  helpTextId="field-21-helptext"
                  isDisabled={false}
                  isInvalid={false}
                  isReadOnly={false}
                  isRequired={true}
                  labelId="field-21-label"
                  nativeID="field-21-label"
                  setHasFeedbackText={[Function]}
                  setHasHelpText={[Function]}
                  style={
                    Object {
                      "flexDirection": "row",
                      "justifyContent": "flex-start",
                      "marginBottom": 4,
                      "marginTop": 4,
                    }
                  }
                >
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#737373",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "500",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    GPS Coordinates (latitude, longitude)
                  </Text>
                  <Text
                    dataSet={Object {}}
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "color": "#dc2626",
                        "fontFamily": undefined,
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "letterSpacing": 0,
                        "lineHeight": 21,
                        "textDecorationLine": undefined,
                      }
                    }
                  >
                    *
                  </Text>
                </View>
                <View
                  dataSet={Object {}}
                  isFocused={false}
                  style={
                    Object {
                      "alignItems": "center",
                      "borderColor": "#d4d4d4",
                      "borderRadius": 4,
                      "borderWidth": 1,
                      "flexDirection": "row",
                      "overflow": "hidden",
                    }
                  }
                >
                  <TextInput
                    accessibilityDescribedBy="field-21-feedback"
                    accessibilityRequired={true}
                    accessible={true}
                    blurOnSubmit={false}
                    dataSet={Object {}}
                    disabled={false}
                    editable={true}
                    isRequired={true}
                    maxLength={30}
                    nativeID="field-21-input"
                    onBlur={[Function]}
                    onChangeText={[Function]}
                    onFocus={[Function]}
                    onKeyPress={[Function]}
                    onSubmitEditing={[Function]}
                    placeholder="Looking for GPS signal"
                    placeholderTextColor="#a3a3a3"
                    readOnly={false}
                    required={true}
                    returnKeyType="done"
                    secureTextEntry={false}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "#171717",
                        "flex": 1,
                        "fontFamily": undefined,
                        "fontSize": 16,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "height": "100%",
                        "paddingBottom": 8,
                        "paddingLeft": 12,
                        "paddingRight": 12,
                        "paddingTop": 8,
                        "width": "100%",
                      }
                    }
                    value=""
                  />
                </View>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          />
          <View
            dataSet={Object {}}
            isInvalid={false}
            isRequired={true}
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              feedbackId="field-22-feedback"
              hasFeedbackText={true}
              hasHelpText={false}
              helpTextId="field-22-helptext"
              isDisabled={false}
              isInvalid={false}
              isReadOnly={false}
              isRequired={true}
              labelId="field-22-label"
              nativeID="field-22-label"
              setHasFeedbackText={[Function]}
              setHasHelpText={[Function]}
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#737373",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Size
              </Text>
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#dc2626",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                *
              </Text>
            </View>
            <View
              accessibilityRole="button"
              accessible={true}
              collapsable={false}
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={Object {}}
            >
              <View
                dataSet={Object {}}
                isFocused={false}
                style={
                  Object {
                    "alignItems": "center",
                    "borderColor": "#d4d4d4",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "flexDirection": "row",
                    "overflow": "hidden",
                  }
                }
              >
                <TextInput
                  accessibilityDescribedBy="field-22-feedback"
                  accessibilityRequired={true}
                  accessible={true}
                  aria-hidden={true}
                  dataSet={Object {}}
                  disabled={false}
                  editable={false}
                  focusable={false}
                  importantForAccessibility="no"
                  isRequired={true}
                  nativeID="field-22-input"
                  onBlur={[Function]}
                  onFocus={[Function]}
                  onKeyPress={[Function]}
                  placeholder="Select a size"
                  placeholderTextColor="#a3a3a3"
                  pointerEvents="none"
                  readOnly={false}
                  required={true}
                  secureTextEntry={false}
                  selection={
                    Object {
                      "start": 0,
                    }
                  }
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#171717",
                      "flex": 1,
                      "fontFamily": undefined,
                      "fontSize": 18,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "height": "100%",
                      "paddingBottom": 8,
                      "paddingLeft": 12,
                      "paddingRight": 12,
                      "paddingTop": 8,
                      "width": "100%",
                    }
                  }
                  value=""
                />
                <View
                  dataSet={Object {}}
                  style={Object {}}
                />
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight="24"
                  bbWidth="24"
                  dataSet={Object {}}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#737373",
                        "height": 24,
                        "marginRight": 12,
                        "paddingBottom": 4,
                        "paddingLeft": 4,
                        "paddingRight": 4,
                        "paddingTop": 4,
                        "width": 24,
                      },
                      Object {
                        "flex": 0,
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                  tintColor="#737373"
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M20.2286 6L11.9973 14.3785L3.76862 6.00268L2 7.80293L12 18L22 7.80293L20.2286 6Z"
                        fill={
                          Object {
                            "type": 2,
                          }
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          />
          <View
            dataSet={Object {}}
            isInvalid={false}
            isRequired={true}
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              feedbackId="field-23-feedback"
              hasFeedbackText={true}
              hasHelpText={false}
              helpTextId="field-23-helptext"
              isDisabled={false}
              isInvalid={false}
              isReadOnly={false}
              isRequired={true}
              labelId="field-23-label"
              nativeID="field-23-label"
              setHasFeedbackText={[Function]}
              setHasHelpText={[Function]}
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#737373",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Color (select all that apply)
              </Text>
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#dc2626",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                *
              </Text>
            </View>
            <View
              dataSet={Object {}}
              style={
                Object {
                  "display": "flex",
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "marginTop": -4,
                }
              }
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "marginRight": 8,
                    "marginTop": 4,
                  }
                }
              >
                <View
                  accessibilityRole="checkbox"
                  accessibilityState={
                    Object {
                      "checked": false,
                      "disabled": false,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  dataSet={Object {}}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={Object {}}
                >
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "flex-start",
                      }
                    }
                  >
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "alignItems": "center",
                          "display": "flex",
                          "justifyContent": "center",
                        }
                      }
                    >
                      <View
                        dataSet={Object {}}
                        style={Object {}}
                      />
                      <View
                        checked={false}
                        colorScheme="red"
                        dataSet={Object {}}
                        defaultIsChecked={false}
                        disabled={false}
                        feedbackId="field-5-feedback"
                        hasFeedbackText={false}
                        hasHelpText={false}
                        helpTextId="field-5-helptext"
                        isChecked={false}
                        isDisabled={false}
                        isRequired={true}
                        labelId="field-5-label"
                        nativeID="field-5"
                        onChange={[Function]}
                        required={true}
                        setHasFeedbackText={[Function]}
                        setHasHelpText={[Function]}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#fafafa",
                            "borderColor": "#a3a3a3",
                            "borderRadius": 4,
                            "borderWidth": 2,
                            "display": "flex",
                            "justifyContent": "center",
                            "opacity": 1,
                            "paddingBottom": 2,
                            "paddingLeft": 2,
                            "paddingRight": 2,
                            "paddingTop": 2,
                          }
                        }
                        value="Red"
                      >
                        <View
                          dataSet={Object {}}
                          style={
                            Object {
                              "color": "#fafafa",
                              "height": 12,
                              "width": 12,
                            }
                          }
                        />
                      </View>
                    </View>
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "width": 8,
                        }
                      }
                    />
                    <Text
                      dataSet={Object {}}
                      style={
                        Object {
                          "backgroundColor": undefined,
                          "color": "#b91c1c",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontStyle": "normal",
                          "fontWeight": "500",
                          "letterSpacing": 0,
                          "lineHeight": 21,
                          "textDecorationLine": undefined,
                        }
                      }
                    >
                      Red
                    </Text>
                  </View>
                </View>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "marginRight": 8,
                    "marginTop": 4,
                  }
                }
              >
                <View
                  accessibilityRole="checkbox"
                  accessibilityState={
                    Object {
                      "checked": false,
                      "disabled": false,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  dataSet={Object {}}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={Object {}}
                >
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "flex-start",
                      }
                    }
                  >
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "alignItems": "center",
                          "display": "flex",
                          "justifyContent": "center",
                        }
                      }
                    >
                      <View
                        dataSet={Object {}}
                        style={Object {}}
                      />
                      <View
                        checked={false}
                        colorScheme="pink"
                        dataSet={Object {}}
                        defaultIsChecked={false}
                        disabled={false}
                        feedbackId="field-5-feedback"
                        hasFeedbackText={false}
                        hasHelpText={false}
                        helpTextId="field-5-helptext"
                        isChecked={false}
                        isDisabled={false}
                        isRequired={true}
                        labelId="field-5-label"
                        nativeID="field-5"
                        onChange={[Function]}
                        required={true}
                        setHasFeedbackText={[Function]}
                        setHasHelpText={[Function]}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#fafafa",
                            "borderColor": "#a3a3a3",
                            "borderRadius": 4,
                            "borderWidth": 2,
                            "display": "flex",
                            "justifyContent": "center",
                            "opacity": 1,
                            "paddingBottom": 2,
                            "paddingLeft": 2,
                            "paddingRight": 2,
                            "paddingTop": 2,
                          }
                        }
                        value="Pink"
                      >
                        <View
                          dataSet={Object {}}
                          style={
                            Object {
                              "color": "#fafafa",
                              "height": 12,
                              "width": 12,
                            }
                          }
                        />
                      </View>
                    </View>
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "width": 8,
                        }
                      }
                    />
                    <Text
                      dataSet={Object {}}
                      style={
                        Object {
                          "backgroundColor": undefined,
                          "color": "#ec4899",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontStyle": "normal",
                          "fontWeight": "500",
                          "letterSpacing": 0,
                          "lineHeight": 21,
                          "textDecorationLine": undefined,
                        }
                      }
                    >
                      Pink
                    </Text>
                  </View>
                </View>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "marginRight": 8,
                    "marginTop": 4,
                  }
                }
              >
                <View
                  accessibilityRole="checkbox"
                  accessibilityState={
                    Object {
                      "checked": false,
                      "disabled": false,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  dataSet={Object {}}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={Object {}}
                >
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "flex-start",
                      }
                    }
                  >
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "alignItems": "center",
                          "display": "flex",
                          "justifyContent": "center",
                        }
                      }
                    >
                      <View
                        dataSet={Object {}}
                        style={Object {}}
                      />
                      <View
                        checked={false}
                        colorScheme="green"
                        dataSet={Object {}}
                        defaultIsChecked={false}
                        disabled={false}
                        feedbackId="field-5-feedback"
                        hasFeedbackText={false}
                        hasHelpText={false}
                        helpTextId="field-5-helptext"
                        isChecked={false}
                        isDisabled={false}
                        isRequired={true}
                        labelId="field-5-label"
                        nativeID="field-5"
                        onChange={[Function]}
                        required={true}
                        setHasFeedbackText={[Function]}
                        setHasHelpText={[Function]}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#fafafa",
                            "borderColor": "#a3a3a3",
                            "borderRadius": 4,
                            "borderWidth": 2,
                            "display": "flex",
                            "justifyContent": "center",
                            "opacity": 1,
                            "paddingBottom": 2,
                            "paddingLeft": 2,
                            "paddingRight": 2,
                            "paddingTop": 2,
                          }
                        }
                        value="Green"
                      >
                        <View
                          dataSet={Object {}}
                          style={
                            Object {
                              "color": "#fafafa",
                              "height": 12,
                              "width": 12,
                            }
                          }
                        />
                      </View>
                    </View>
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "width": 8,
                        }
                      }
                    />
                    <Text
                      dataSet={Object {}}
                      style={
                        Object {
                          "backgroundColor": undefined,
                          "color": "#15803d",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontStyle": "normal",
                          "fontWeight": "500",
                          "letterSpacing": 0,
                          "lineHeight": 21,
                          "textDecorationLine": undefined,
                        }
                      }
                    >
                      Green
                    </Text>
                  </View>
                </View>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "marginRight": 8,
                    "marginTop": 4,
                  }
                }
              >
                <View
                  accessibilityRole="checkbox"
                  accessibilityState={
                    Object {
                      "checked": false,
                      "disabled": false,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  dataSet={Object {}}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={Object {}}
                >
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "flex-start",
                      }
                    }
                  >
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "alignItems": "center",
                          "display": "flex",
                          "justifyContent": "center",
                        }
                      }
                    >
                      <View
                        dataSet={Object {}}
                        style={Object {}}
                      />
                      <View
                        checked={false}
                        colorScheme="orange"
                        dataSet={Object {}}
                        defaultIsChecked={false}
                        disabled={false}
                        feedbackId="field-5-feedback"
                        hasFeedbackText={false}
                        hasHelpText={false}
                        helpTextId="field-5-helptext"
                        isChecked={false}
                        isDisabled={false}
                        isRequired={true}
                        labelId="field-5-label"
                        nativeID="field-5"
                        onChange={[Function]}
                        required={true}
                        setHasFeedbackText={[Function]}
                        setHasHelpText={[Function]}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#fafafa",
                            "borderColor": "#a3a3a3",
                            "borderRadius": 4,
                            "borderWidth": 2,
                            "display": "flex",
                            "justifyContent": "center",
                            "opacity": 1,
                            "paddingBottom": 2,
                            "paddingLeft": 2,
                            "paddingRight": 2,
                            "paddingTop": 2,
                          }
                        }
                        value="Orange"
                      >
                        <View
                          dataSet={Object {}}
                          style={
                            Object {
                              "color": "#fafafa",
                              "height": 12,
                              "width": 12,
                            }
                          }
                        />
                      </View>
                    </View>
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "width": 8,
                        }
                      }
                    />
                    <Text
                      dataSet={Object {}}
                      style={
                        Object {
                          "backgroundColor": undefined,
                          "color": "#f97316",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontStyle": "normal",
                          "fontWeight": "500",
                          "letterSpacing": 0,
                          "lineHeight": 21,
                          "textDecorationLine": undefined,
                        }
                      }
                    >
                      Orange
                    </Text>
                  </View>
                </View>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "marginRight": 8,
                    "marginTop": 4,
                  }
                }
              >
                <View
                  accessibilityRole="checkbox"
                  accessibilityState={
                    Object {
                      "checked": false,
                      "disabled": false,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  dataSet={Object {}}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={Object {}}
                >
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "flex-start",
                      }
                    }
                  >
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "alignItems": "center",
                          "display": "flex",
                          "justifyContent": "center",
                        }
                      }
                    >
                      <View
                        dataSet={Object {}}
                        style={Object {}}
                      />
                      <View
                        checked={false}
                        colorScheme="yellow"
                        dataSet={Object {}}
                        defaultIsChecked={false}
                        disabled={false}
                        feedbackId="field-5-feedback"
                        hasFeedbackText={false}
                        hasHelpText={false}
                        helpTextId="field-5-helptext"
                        isChecked={false}
                        isDisabled={false}
                        isRequired={true}
                        labelId="field-5-label"
                        nativeID="field-5"
                        onChange={[Function]}
                        required={true}
                        setHasFeedbackText={[Function]}
                        setHasHelpText={[Function]}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#fafafa",
                            "borderColor": "#a3a3a3",
                            "borderRadius": 4,
                            "borderWidth": 2,
                            "display": "flex",
                            "justifyContent": "center",
                            "opacity": 1,
                            "paddingBottom": 2,
                            "paddingLeft": 2,
                            "paddingRight": 2,
                            "paddingTop": 2,
                          }
                        }
                        value="Yellow"
                      >
                        <View
                          dataSet={Object {}}
                          style={
                            Object {
                              "color": "#fafafa",
                              "height": 12,
                              "width": 12,
                            }
                          }
                        />
                      </View>
                    </View>
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "width": 8,
                        }
                      }
                    />
                    <Text
                      dataSet={Object {}}
                      style={
                        Object {
                          "backgroundColor": undefined,
                          "color": "#ca8a04",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontStyle": "normal",
                          "fontWeight": "500",
                          "letterSpacing": 0,
                          "lineHeight": 21,
                          "textDecorationLine": undefined,
                        }
                      }
                    >
                      Yellow
                    </Text>
                  </View>
                </View>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "marginRight": 8,
                    "marginTop": 4,
                  }
                }
              >
                <View
                  accessibilityRole="checkbox"
                  accessibilityState={
                    Object {
                      "checked": false,
                      "disabled": false,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  dataSet={Object {}}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={Object {}}
                >
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "flex-start",
                      }
                    }
                  >
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "alignItems": "center",
                          "display": "flex",
                          "justifyContent": "center",
                        }
                      }
                    >
                      <View
                        dataSet={Object {}}
                        style={Object {}}
                      />
                      <View
                        checked={false}
                        colorScheme="gray"
                        dataSet={Object {}}
                        defaultIsChecked={false}
                        disabled={false}
                        feedbackId="field-5-feedback"
                        hasFeedbackText={false}
                        hasHelpText={false}
                        helpTextId="field-5-helptext"
                        isChecked={false}
                        isDisabled={false}
                        isRequired={true}
                        labelId="field-5-label"
                        nativeID="field-5"
                        onChange={[Function]}
                        required={true}
                        setHasFeedbackText={[Function]}
                        setHasHelpText={[Function]}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#fafafa",
                            "borderColor": "#a3a3a3",
                            "borderRadius": 4,
                            "borderWidth": 2,
                            "display": "flex",
                            "justifyContent": "center",
                            "opacity": 1,
                            "paddingBottom": 2,
                            "paddingLeft": 2,
                            "paddingRight": 2,
                            "paddingTop": 2,
                          }
                        }
                        value="Grey"
                      >
                        <View
                          dataSet={Object {}}
                          style={
                            Object {
                              "color": "#fafafa",
                              "height": 12,
                              "width": 12,
                            }
                          }
                        />
                      </View>
                    </View>
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "width": 8,
                        }
                      }
                    />
                    <Text
                      dataSet={Object {}}
                      style={
                        Object {
                          "backgroundColor": undefined,
                          "color": "#52525b",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontStyle": "normal",
                          "fontWeight": "500",
                          "letterSpacing": 0,
                          "lineHeight": 21,
                          "textDecorationLine": undefined,
                        }
                      }
                    >
                      Grey
                    </Text>
                  </View>
                </View>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "marginRight": 8,
                    "marginTop": 4,
                  }
                }
              >
                <View
                  accessibilityRole="checkbox"
                  accessibilityState={
                    Object {
                      "checked": false,
                      "disabled": false,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  dataSet={Object {}}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={Object {}}
                >
                  <View
                    dataSet={Object {}}
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "flex-start",
                      }
                    }
                  >
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "alignItems": "center",
                          "display": "flex",
                          "justifyContent": "center",
                        }
                      }
                    >
                      <View
                        dataSet={Object {}}
                        style={Object {}}
                      />
                      <View
                        checked={false}
                        colorScheme="info"
                        dataSet={Object {}}
                        defaultIsChecked={false}
                        disabled={false}
                        feedbackId="field-5-feedback"
                        hasFeedbackText={false}
                        hasHelpText={false}
                        helpTextId="field-5-helptext"
                        isChecked={false}
                        isDisabled={false}
                        isRequired={true}
                        labelId="field-5-label"
                        nativeID="field-5"
                        onChange={[Function]}
                        required={true}
                        setHasFeedbackText={[Function]}
                        setHasHelpText={[Function]}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#fafafa",
                            "borderColor": "#a3a3a3",
                            "borderRadius": 4,
                            "borderWidth": 2,
                            "display": "flex",
                            "justifyContent": "center",
                            "opacity": 1,
                            "paddingBottom": 2,
                            "paddingLeft": 2,
                            "paddingRight": 2,
                            "paddingTop": 2,
                          }
                        }
                        value="Other"
                      >
                        <View
                          dataSet={Object {}}
                          style={
                            Object {
                              "color": "#fafafa",
                              "height": 12,
                              "width": 12,
                            }
                          }
                        />
                      </View>
                    </View>
                    <View
                      dataSet={Object {}}
                      style={
                        Object {
                          "width": 8,
                        }
                      }
                    />
                    <Text
                      dataSet={Object {}}
                      style={
                        Object {
                          "backgroundColor": undefined,
                          "color": "#171717",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontStyle": "normal",
                          "fontWeight": "400",
                          "letterSpacing": 0,
                          "lineHeight": 21,
                          "textDecorationLine": undefined,
                        }
                      }
                    >
                      Other (describe in notes)
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          />
          <View
            dataSet={Object {}}
            isInvalid={false}
            isRequired={false}
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              feedbackId="field-24-feedback"
              hasFeedbackText={true}
              hasHelpText={false}
              helpTextId="field-24-helptext"
              isDisabled={false}
              isInvalid={false}
              isReadOnly={false}
              isRequired={false}
              labelId="field-24-label"
              nativeID="field-24-label"
              setHasFeedbackText={[Function]}
              setHasHelpText={[Function]}
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#737373",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Tube Id
              </Text>
            </View>
            <View
              dataSet={Object {}}
              isFocused={false}
              style={
                Object {
                  "alignItems": "center",
                  "borderColor": "#d4d4d4",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "opacity": 0.4,
                  "overflow": "hidden",
                }
              }
            >
              <TextInput
                accessibilityDescribedBy="field-24-feedback"
                accessible={true}
                blurOnSubmit={false}
                dataSet={Object {}}
                disabled={true}
                editable={false}
                isRequired={false}
                maxLength={20}
                nativeID="field-24-input"
                onBlur={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                onKeyPress={[Function]}
                onSubmitEditing={[Function]}
                placeholder="Disabled - only used for Samples"
                placeholderTextColor="#a3a3a3"
                readOnly={false}
                required={false}
                returnKeyType="done"
                secureTextEntry={false}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#171717",
                    "flex": 1,
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "height": "100%",
                    "paddingBottom": 8,
                    "paddingLeft": 12,
                    "paddingRight": 12,
                    "paddingTop": 8,
                    "width": "100%",
                  }
                }
              />
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              feedbackId="field-25-feedback"
              hasFeedbackText={false}
              hasHelpText={false}
              helpTextId="field-25-helptext"
              isDisabled={false}
              isInvalid={false}
              isReadOnly={false}
              isRequired={false}
              labelId="field-25-label"
              nativeID="field-25-label"
              setHasFeedbackText={[Function]}
              setHasHelpText={[Function]}
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#737373",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Location Description (limit 255 characters)
              </Text>
            </View>
            <View
              dataSet={Object {}}
              isFocused={false}
              style={
                Object {
                  "alignItems": "center",
                  "borderColor": "#d4d4d4",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "height": 80,
                  "overflow": "hidden",
                }
              }
            >
              <TextInput
                accessible={true}
                blurOnSubmit={false}
                dataSet={Object {}}
                disabled={false}
                editable={true}
                isRequired={false}
                maxLength={255}
                multiline={true}
                nativeID="field-25-input"
                onBlur={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                onKeyPress={[Function]}
                onSubmitEditing={[Function]}
                placeholder="ie: Blue Lake, North Cascades, WA"
                placeholderTextColor="#a3a3a3"
                readOnly={false}
                required={false}
                returnKeyType="done"
                secureTextEntry={false}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#171717",
                    "flex": 1,
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "height": "100%",
                    "paddingBottom": 8,
                    "paddingLeft": 12,
                    "paddingRight": 12,
                    "paddingTop": 8,
                    "width": "100%",
                  }
                }
                textAlignVertical="top"
                value=""
              />
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              feedbackId="field-26-feedback"
              hasFeedbackText={false}
              hasHelpText={false}
              helpTextId="field-26-helptext"
              isDisabled={false}
              isInvalid={false}
              isReadOnly={false}
              isRequired={false}
              labelId="field-26-label"
              nativeID="field-26-label"
              setHasFeedbackText={[Function]}
              setHasHelpText={[Function]}
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#737373",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Notes (limit 255 characters)
              </Text>
            </View>
            <View
              dataSet={Object {}}
              isFocused={false}
              style={
                Object {
                  "alignItems": "center",
                  "borderColor": "#d4d4d4",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "height": 80,
                  "overflow": "hidden",
                }
              }
            >
              <TextInput
                accessible={true}
                blurOnSubmit={true}
                dataSet={Object {}}
                disabled={false}
                editable={true}
                isRequired={false}
                maxLength={255}
                multiline={true}
                nativeID="field-26-input"
                onBlur={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                onKeyPress={[Function]}
                placeholder="ie. dark red algae on glacial ice"
                placeholderTextColor="#a3a3a3"
                readOnly={false}
                required={false}
                returnKeyType="done"
                secureTextEntry={false}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#171717",
                    "flex": 1,
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "height": "100%",
                    "paddingBottom": 8,
                    "paddingLeft": 12,
                    "paddingRight": 12,
                    "paddingTop": 8,
                    "width": "100%",
                  }
                }
                textAlignVertical="top"
              />
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          />
          <View
            dataSet={Object {}}
            style={
              Object {
                "width": "100%",
              }
            }
          >
            <View
              dataSet={Object {}}
              feedbackId="field-27-feedback"
              hasFeedbackText={false}
              hasHelpText={false}
              helpTextId="field-27-helptext"
              isDisabled={false}
              isInvalid={false}
              isReadOnly={false}
              isRequired={false}
              labelId="field-27-label"
              nativeID="field-27-label"
              setHasFeedbackText={[Function]}
              setHasHelpText={[Function]}
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "marginBottom": 4,
                  "marginTop": 4,
                }
              }
            >
              <Text
                dataSet={Object {}}
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#737373",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Select Photos (limit 4)
              </Text>
            </View>
            <View
              accessible={true}
              collapsable={false}
              dataSet={Object {}}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={Object {}}
              testID="photo-selector"
            >
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "height": 52,
                    "width": 52,
                  }
                }
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight="50"
                  bbWidth="50"
                  dataSet={Object {}}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "color": "#0891b2",
                        "height": 50,
                        "width": 50,
                      },
                      Object {
                        "flex": 0,
                        "height": 50,
                        "width": 50,
                      },
                    ]
                  }
                  tintColor="#0891b2"
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M13.25 10.75V2H10.75V10.75H2V13.25H10.75V22H13.25V13.25H22V10.75H13.25Z"
                        fill={
                          Object {
                            "type": 2,
                          }
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "marginBottom": 8,
                "marginTop": 8,
              }
            }
          />
        </View>
      </View>
    </RCTScrollView>
  </View>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "display": "none",
        },
      ]
    }
  >
    <View
      collapsable={false}
      pointerEvents="none"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "transform": Array [
            Object {
              "translateY": 0,
            },
            Object {
              "translateX": 0,
            },
            Object {
              "scale": 1,
            },
            Object {
              "scaleX": 1,
            },
            Object {
              "scaleY": 1,
            },
            Object {
              "rotate": "0deg",
            },
          ],
        }
      }
    >
      <View
        accessible={false}
        collapsable={false}
        dataSet={Object {}}
        focusable={true}
        importantForAccessibility="no"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "rgb(0, 0, 0)",
            "bottom": 0,
            "left": 0,
            "opacity": 0.3,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
    <View
      collapsable={false}
      pointerEvents="none"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "transform": Array [
            Object {
              "translateY": 0,
            },
            Object {
              "translateX": 0,
            },
            Object {
              "scale": 1,
            },
            Object {
              "scaleX": 1,
            },
            Object {
              "scaleY": 1,
            },
            Object {
              "rotate": "0deg",
            },
          ],
        }
      }
    >
      <View
        closeOnOverlayClick={true}
        dataSet={Object {}}
        pointerEvents="box-none"
        style={
          Object {
            "alignItems": "center",
            "height": "100%",
            "justifyContent": "center",
            "width": "100%",
          }
        }
        testID="gps-enable-manual-coordinates-modal"
      >
        <View
          accessibilityViewIsModal={true}
          aria-modal="true"
          dataSet={Object {}}
          onAccessibilityEscape={[Function]}
          style={
            Object {
              "backgroundColor": "#fafafa",
              "borderRadius": 8,
              "elevation": 2,
              "maxHeight": 1184,
              "maxWidth": 320,
              "overflow": "hidden",
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.2,
              "shadowRadius": 1.41,
              "width": "65%",
            }
          }
        >
          <View
            accessibilityRole="button"
            accessible={true}
            collapsable={false}
            colorScheme="coolGray"
            dataSet={Object {}}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "transparent",
                "borderRadius": 4,
                "paddingBottom": 8,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 8,
                "position": "absolute",
                "right": 12,
                "top": 12,
                "zIndex": 1,
              }
            }
          >
            <RNSVGSvgView
              accessibilityRole="image"
              align="xMidYMid"
              bbHeight="16"
              bbWidth="16"
              dataSet={Object {}}
              focusable={false}
              meetOrSlice={0}
              minX={0}
              minY={0}
              stroke=""
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  Object {
                    "color": "#737373",
                    "height": 16,
                    "width": 16,
                  },
                  Object {
                    "flex": 0,
                    "height": 16,
                    "width": 16,
                  },
                ]
              }
              tintColor="#737373"
              vbHeight={24}
              vbWidth={24}
            >
              <RNSVGGroup
                propList={
                  Array [
                    "stroke",
                  ]
                }
                stroke={null}
              >
                <RNSVGGroup>
                  <RNSVGPath
                    d="M12 9.77778L4.22222 2L2 4.22222L9.77778 12L2 19.7778L4.22222 22L12 14.2222L19.7778 22L22 19.7778L14.2222 12L22 4.22222L19.7778 2L12 9.77778Z"
                    fill={
                      Object {
                        "type": 2,
                      }
                    }
                    propList={
                      Array [
                        "fill",
                        "stroke",
                      ]
                    }
                    stroke={null}
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
          <View
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#fafafa",
                "borderBottomWidth": 1,
                "borderColor": "#d4d4d4",
                "paddingBottom": 16,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              dataSet={Object {}}
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#171717",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                  "letterSpacing": 0,
                  "lineHeight": 20,
                  "textDecorationLine": undefined,
                }
              }
            >
              Enter coordinates manually?
            </Text>
          </View>
          <RCTScrollView
            contentContainerStyle={
              Array [
                Object {},
                Object {
                  "dataSet": Object {},
                },
                Object {},
              ]
            }
            dataSet={Object {}}
            style={Object {}}
          >
            <View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "paddingBottom": 16,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 16,
                  }
                }
              >
                <Text
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "color": "#171717",
                      "fontFamily": undefined,
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "letterSpacing": 0,
                      "lineHeight": 21,
                      "textDecorationLine": undefined,
                    }
                  }
                >
                  Some users enter coordinates manually if they cannot acquire GPS signal or when they return home.

This message can be disabled in Settings.
                </Text>
              </View>
            </View>
          </RCTScrollView>
          <View
            dataSet={Object {}}
            style={
              Object {
                "backgroundColor": "#fafafa",
                "borderColor": "#d4d4d4",
                "borderTopWidth": 1,
                "flexDirection": "row",
                "flexWrap": "wrap",
                "justifyContent": "flex-end",
                "paddingBottom": 16,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 16,
              }
            }
          >
            <View
              dataSet={Object {}}
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <View
                accessibilityRole="button"
                accessible={true}
                collapsable={false}
                colorScheme="blueGray"
                dataSet={Object {}}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "borderRadius": 4,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 10,
                    "paddingLeft": 12,
                    "paddingRight": 12,
                    "paddingTop": 10,
                  }
                }
                testID="modal-no-button"
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                  test={true}
                >
                  <View
                    dataSet={Object {}}
                    style={Object {}}
                  >
                    <Text
                      dataSet={Object {}}
                      style={
                        Object {
                          "backgroundColor": undefined,
                          "color": "#475569",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontStyle": "normal",
                          "fontWeight": "400",
                          "letterSpacing": 0,
                          "lineHeight": 21,
                          "textDecorationLine": undefined,
                        }
                      }
                    >
                      Cancel
                    </Text>
                  </View>
                </View>
              </View>
              <View
                dataSet={Object {}}
                style={
                  Object {
                    "width": 8,
                  }
                }
              />
              <View
                accessibilityRole="button"
                accessible={true}
                collapsable={false}
                colorScheme="primary"
                dataSet={Object {}}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#0891b2",
                    "borderRadius": 4,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 10,
                    "paddingLeft": 12,
                    "paddingRight": 12,
                    "paddingTop": 10,
                  }
                }
                testID="modal-confirm-button"
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                  test={true}
                >
                  <View
                    dataSet={Object {}}
                    style={Object {}}
                  >
                    <Text
                      dataSet={Object {}}
                      style={
                        Object {
                          "backgroundColor": undefined,
                          "color": "#fafafa",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontStyle": "normal",
                          "fontWeight": "400",
                          "letterSpacing": 0,
                          "lineHeight": 21,
                          "textDecorationLine": undefined,
                        }
                      }
                    >
                      Confirm
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "display": "flex",
          "overflow": "hidden",
        },
      ]
    }
  >
    <View
      collapsable={false}
      pointerEvents="none"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "transform": Array [
            Object {
              "translateY": 0,
            },
            Object {
              "translateX": 0,
            },
            Object {
              "scale": 1,
            },
            Object {
              "scaleX": 1,
            },
            Object {
              "scaleY": 1,
            },
            Object {
              "rotate": "0deg",
            },
          ],
        }
      }
    >
      <View
        accessible={false}
        collapsable={false}
        dataSet={Object {}}
        focusable={true}
        importantForAccessibility="no"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "rgb(0, 0, 0)",
            "bottom": 0,
            "left": 0,
            "opacity": 0.3,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
    <View
      collapsable={false}
      pointerEvents="none"
      style={
        Object {
          "bottom": 0,
          "height": "100%",
          "left": 0,
          "opacity": 1,
          "position": "absolute",
          "right": 0,
          "transform": Array [
            Object {
              "translateY": 0,
            },
            Object {
              "translateX": 0,
            },
            Object {
              "scale": 1,
            },
            Object {
              "scaleX": 1,
            },
            Object {
              "scaleY": 1,
            },
            Object {
              "rotate": "0deg",
            },
          ],
        }
      }
    >
      <View
        dataSet={Object {}}
        onLayout={[Function]}
        pointerEvents="box-none"
        style={
          Object {
            "height": "100%",
            "opacity": 0,
          }
        }
      >
        <View
          closeOnOverlayClick={true}
          dataSet={Object {}}
          pointerEvents="box-none"
          style={
            Object {
              "alignItems": "center",
              "height": "100%",
              "justifyContent": "flex-end",
              "width": "100%",
            }
          }
        >
          <View
            collapsable={false}
            onLayout={[Function]}
            pointerEvents="box-none"
            style={
              Object {
                "transform": Array [
                  Object {
                    "translateY": 0,
                  },
                ],
                "width": "100%",
              }
            }
          >
            <View
              collapsable={false}
              dataSet={Object {}}
              onMoveShouldSetResponder={[Function]}
              onMoveShouldSetResponderCapture={[Function]}
              onResponderEnd={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderReject={[Function]}
              onResponderRelease={[Function]}
              onResponderStart={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              onStartShouldSetResponderCapture={[Function]}
              style={
                Object {
                  "paddingBottom": 8,
                  "paddingTop": 8,
                }
              }
            />
            <View
              accessibilityViewIsModal={true}
              aria-modal="true"
              dataSet={Object {}}
              onAccessibilityEscape={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderRadius": 0,
                  "borderTopLeftRadius": 20,
                  "borderTopRightRadius": 20,
                  "elevation": 2,
                  "maxHeight": 1184,
                  "overflow": "hidden",
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": 0,
                  },
                  "shadowOpacity": 0.2,
                  "shadowRadius": 1.41,
                  "width": "100%",
                }
              }
            >
              <View
                collapsable={false}
                dataSet={Object {}}
                onMoveShouldSetResponder={[Function]}
                onMoveShouldSetResponderCapture={[Function]}
                onResponderEnd={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderReject={[Function]}
                onResponderRelease={[Function]}
                onResponderStart={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                onStartShouldSetResponderCapture={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "marginTop": -8,
                    "paddingBottom": 12,
                    "paddingTop": 12,
                    "width": "100%",
                  }
                }
              >
                <View
                  dataSet={Object {}}
                  style={
                    Object {
                      "backgroundColor": "#737373",
                      "borderRadius": 2,
                      "height": 4,
                      "width": 40,
                    }
                  }
                />
              </View>
              <RCTScrollView
                contentContainerStyle={
                  Array [
                    Object {},
                    Object {
                      "dataSet": Object {},
                    },
                    Object {},
                  ]
                }
                data={
                  Array [
                    Object {
                      "label": "Fist",
                      "value": "Fist",
                    },
                    Object {
                      "label": "Shoe Box",
                      "value": "Shoe Box",
                    },
                    Object {
                      "label": "Coffee Table",
                      "value": "Coffee Table",
                    },
                    Object {
                      "label": "Car",
                      "value": "Car",
                    },
                    Object {
                      "label": "Bus",
                      "value": "Bus",
                    },
                    Object {
                      "label": "Playground",
                      "value": "Playground",
                    },
                    Object {
                      "label": "Sports Field",
                      "value": "Sports Field",
                    },
                    Object {
                      "label": "Other (describe in notes)",
                      "value": "Other",
                    },
                  ]
                }
                dataSet={Object {}}
                getItem={[Function]}
                getItemCount={[Function]}
                keyExtractor={[Function]}
                onContentSizeChange={[Function]}
                onLayout={[Function]}
                onMomentumScrollBegin={[Function]}
                onMomentumScrollEnd={[Function]}
                onScroll={[Function]}
                onScrollBeginDrag={[Function]}
                onScrollEndDrag={[Function]}
                removeClippedSubviews={false}
                renderItem={[Function]}
                scrollEventThrottle={50}
                stickyHeaderIndices={Array []}
                style={
                  Object {
                    "width": "100%",
                  }
                }
                viewabilityConfigCallbackPairs={Array []}
              >
                <View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessibilityState={
                        Object {
                          "selected": false,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      dataSet={Object {}}
                      focusable={true}
                      label="Fist"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "backgroundColor": "#fafafa",
                          "justifyContent": "flex-start",
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                          "width": "100%",
                        }
                      }
                      value="Fist"
                    >
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "flexDirection": "row",
                          }
                        }
                        test={true}
                      >
                        <View
                          dataSet={Object {}}
                          style={Object {}}
                        >
                          <Text
                            dataSet={Object {}}
                            style={
                              Object {
                                "backgroundColor": undefined,
                                "color": "#171717",
                                "fontFamily": undefined,
                                "fontSize": 16,
                                "fontStyle": "normal",
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 24,
                                "textDecorationLine": undefined,
                              }
                            }
                          >
                            Fist
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessibilityState={
                        Object {
                          "selected": false,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      dataSet={Object {}}
                      focusable={true}
                      label="Shoe Box"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "backgroundColor": "#fafafa",
                          "justifyContent": "flex-start",
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                          "width": "100%",
                        }
                      }
                      value="Shoe Box"
                    >
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "flexDirection": "row",
                          }
                        }
                        test={true}
                      >
                        <View
                          dataSet={Object {}}
                          style={Object {}}
                        >
                          <Text
                            dataSet={Object {}}
                            style={
                              Object {
                                "backgroundColor": undefined,
                                "color": "#171717",
                                "fontFamily": undefined,
                                "fontSize": 16,
                                "fontStyle": "normal",
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 24,
                                "textDecorationLine": undefined,
                              }
                            }
                          >
                            Shoe Box
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessibilityState={
                        Object {
                          "selected": false,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      dataSet={Object {}}
                      focusable={true}
                      label="Coffee Table"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "backgroundColor": "#fafafa",
                          "justifyContent": "flex-start",
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                          "width": "100%",
                        }
                      }
                      value="Coffee Table"
                    >
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "flexDirection": "row",
                          }
                        }
                        test={true}
                      >
                        <View
                          dataSet={Object {}}
                          style={Object {}}
                        >
                          <Text
                            dataSet={Object {}}
                            style={
                              Object {
                                "backgroundColor": undefined,
                                "color": "#171717",
                                "fontFamily": undefined,
                                "fontSize": 16,
                                "fontStyle": "normal",
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 24,
                                "textDecorationLine": undefined,
                              }
                            }
                          >
                            Coffee Table
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessibilityState={
                        Object {
                          "selected": false,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      dataSet={Object {}}
                      focusable={true}
                      label="Car"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "backgroundColor": "#fafafa",
                          "justifyContent": "flex-start",
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                          "width": "100%",
                        }
                      }
                      value="Car"
                    >
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "flexDirection": "row",
                          }
                        }
                        test={true}
                      >
                        <View
                          dataSet={Object {}}
                          style={Object {}}
                        >
                          <Text
                            dataSet={Object {}}
                            style={
                              Object {
                                "backgroundColor": undefined,
                                "color": "#171717",
                                "fontFamily": undefined,
                                "fontSize": 16,
                                "fontStyle": "normal",
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 24,
                                "textDecorationLine": undefined,
                              }
                            }
                          >
                            Car
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessibilityState={
                        Object {
                          "selected": false,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      dataSet={Object {}}
                      focusable={true}
                      label="Bus"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "backgroundColor": "#fafafa",
                          "justifyContent": "flex-start",
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                          "width": "100%",
                        }
                      }
                      value="Bus"
                    >
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "flexDirection": "row",
                          }
                        }
                        test={true}
                      >
                        <View
                          dataSet={Object {}}
                          style={Object {}}
                        >
                          <Text
                            dataSet={Object {}}
                            style={
                              Object {
                                "backgroundColor": undefined,
                                "color": "#171717",
                                "fontFamily": undefined,
                                "fontSize": 16,
                                "fontStyle": "normal",
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 24,
                                "textDecorationLine": undefined,
                              }
                            }
                          >
                            Bus
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessibilityState={
                        Object {
                          "selected": false,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      dataSet={Object {}}
                      focusable={true}
                      label="Playground"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "backgroundColor": "#fafafa",
                          "justifyContent": "flex-start",
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                          "width": "100%",
                        }
                      }
                      value="Playground"
                    >
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "flexDirection": "row",
                          }
                        }
                        test={true}
                      >
                        <View
                          dataSet={Object {}}
                          style={Object {}}
                        >
                          <Text
                            dataSet={Object {}}
                            style={
                              Object {
                                "backgroundColor": undefined,
                                "color": "#171717",
                                "fontFamily": undefined,
                                "fontSize": 16,
                                "fontStyle": "normal",
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 24,
                                "textDecorationLine": undefined,
                              }
                            }
                          >
                            Playground
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessibilityState={
                        Object {
                          "selected": false,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      dataSet={Object {}}
                      focusable={true}
                      label="Sports Field"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "backgroundColor": "#fafafa",
                          "justifyContent": "flex-start",
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                          "width": "100%",
                        }
                      }
                      value="Sports Field"
                    >
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "flexDirection": "row",
                          }
                        }
                        test={true}
                      >
                        <View
                          dataSet={Object {}}
                          style={Object {}}
                        >
                          <Text
                            dataSet={Object {}}
                            style={
                              Object {
                                "backgroundColor": undefined,
                                "color": "#171717",
                                "fontFamily": undefined,
                                "fontSize": 16,
                                "fontStyle": "normal",
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 24,
                                "textDecorationLine": undefined,
                              }
                            }
                          >
                            Sports Field
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      accessibilityState={
                        Object {
                          "selected": false,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      dataSet={Object {}}
                      focusable={true}
                      label="Other (describe in notes)"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "backgroundColor": "#fafafa",
                          "justifyContent": "flex-start",
                          "paddingBottom": 16,
                          "paddingLeft": 16,
                          "paddingRight": 16,
                          "paddingTop": 16,
                          "width": "100%",
                        }
                      }
                      value="Other"
                    >
                      <View
                        dataSet={Object {}}
                        style={
                          Object {
                            "flexDirection": "row",
                          }
                        }
                        test={true}
                      >
                        <View
                          dataSet={Object {}}
                          style={Object {}}
                        >
                          <Text
                            dataSet={Object {}}
                            style={
                              Object {
                                "backgroundColor": undefined,
                                "color": "#171717",
                                "fontFamily": undefined,
                                "fontSize": 16,
                                "fontStyle": "normal",
                                "fontWeight": "400",
                                "letterSpacing": 0,
                                "lineHeight": 24,
                                "textDecorationLine": undefined,
                              }
                            }
                          >
                            Other (describe in notes)
                          </Text>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </RCTScrollView>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;
